version: "3.3"

services:
  gbans:
    build:
      context: "../"
      dockerfile: Dockerfile
    volumes:
      - dl_cache:/app/.cache
      - ../gbans.yml:/app/gbans.yml
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - prod_network
    ports:
      - "0.0.0.0:6006:6006"
    environment:
      GBANS_DATABASE_DSN: postgresql://gbans:gbans@postgres:5432/gbans
      GBANS_GENERAL_STEAM_KEY: ${GBANS_GENERAL_STEAM_KEY}
    command: ./gbans serve

  postgres:
    image: postgis/postgis:15-3.3
    restart: always
    shm_size: 1gb
    ports:
      - "0.0.0.0:5432:5432"
    environment:
      POSTGRES_USER: gbans
      POSTGRES_DB: gbans
      POSTGRES_PASSWORD: gbans
    networks:
      - prod_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gbans"]
      interval: 5s
      timeout: 5s
      retries: 10

  minio:
    image: docker.io/bitnami/minio:2023
    restart: always
    environment:
      # *must* be >= 8 chars or minio will not start
      - MINIO_ROOT_USER=gbansgbans
      - MINIO_ROOT_PASSWORD=gbansgbans
    ports:
      - '0.0.0.0:9000:9000'
      - '0.0.0.0:9001:9001'
    volumes:
      - 'minio_data:/bitnami/minio/data'
    networks:
      - prod_network

volumes:
  dl_cache:
  minio_data:
    driver: local

networks:
  prod_network:
