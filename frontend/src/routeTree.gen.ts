/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ModRouteImport } from './routes/_mod'
import { Route as GuestRouteImport } from './routes/_guest'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AdminRouteImport } from './routes/_admin'
import { Route as GuestIndexRouteImport } from './routes/_guest.index'
import { Route as GuestWikiRouteImport } from './routes/_guest.wiki'
import { Route as GuestStvRouteImport } from './routes/_guest.stv'
import { Route as GuestServersRouteImport } from './routes/_guest.servers'
import { Route as GuestPrivacyPolicyRouteImport } from './routes/_guest.privacy-policy'
import { Route as GuestPatreonRouteImport } from './routes/_guest.patreon'
import { Route as GuestContestsRouteImport } from './routes/_guest.contests'
import { Route as GuestChangelogRouteImport } from './routes/_guest.changelog'
import { Route as AuthStatsRouteImport } from './routes/_auth.stats'
import { Route as AuthSettingsRouteImport } from './routes/_auth.settings'
import { Route as AuthReportRouteImport } from './routes/_auth.report'
import { Route as AuthPermissionRouteImport } from './routes/_auth.permission'
import { Route as AuthPageNotFoundRouteImport } from './routes/_auth.page-not-found'
import { Route as AuthNotificationsRouteImport } from './routes/_auth.notifications'
import { Route as AuthLogoutRouteImport } from './routes/_auth.logout'
import { Route as AuthForumsRouteImport } from './routes/_auth.forums'
import { Route as AuthChatlogsRouteImport } from './routes/_auth.chatlogs'
import { Route as GuestWikiIndexRouteImport } from './routes/_guest.wiki.index'
import { Route as GuestSpeedrunsIndexRouteImport } from './routes/_guest.speedruns.index'
import { Route as GuestLoginIndexRouteImport } from './routes/_guest.login.index'
import { Route as AuthStatsIndexRouteImport } from './routes/_auth.stats.index'
import { Route as AuthReportIndexRouteImport } from './routes/_auth.report.index'
import { Route as AuthForumsIndexRouteImport } from './routes/_auth.forums.index'
import { Route as ModAdminVotesRouteImport } from './routes/_mod.admin.votes'
import { Route as ModAdminReportsRouteImport } from './routes/_mod.admin.reports'
import { Route as ModAdminPeopleRouteImport } from './routes/_mod.admin.people'
import { Route as ModAdminNewsRouteImport } from './routes/_mod.admin.news'
import { Route as ModAdminFiltersRouteImport } from './routes/_mod.admin.filters'
import { Route as ModAdminContestsRouteImport } from './routes/_mod.admin.contests'
import { Route as ModAdminAppealsRouteImport } from './routes/_mod.admin.appeals'
import { Route as ModAdminAnticheatRouteImport } from './routes/_mod.admin.anticheat'
import { Route as GuestWikiSlugRouteImport } from './routes/_guest.wiki.$slug'
import { Route as GuestProfileSteamIdRouteImport } from './routes/_guest.profile.$steamId'
import { Route as GuestLoginSuccessRouteImport } from './routes/_guest.login.success'
import { Route as AuthReportReportIdRouteImport } from './routes/_auth.report.$reportId'
import { Route as AuthMatchMatchIdRouteImport } from './routes/_auth.match.$matchId'
import { Route as AuthForumsForum_idRouteImport } from './routes/_auth.forums.$forum_id'
import { Route as AuthContestsContest_idRouteImport } from './routes/_auth.contests.$contest_id'
import { Route as AuthBanBan_idRouteImport } from './routes/_auth.ban.$ban_id'
import { Route as AdminAdminSettingsRouteImport } from './routes/_admin.admin.settings'
import { Route as AdminAdminServersRouteImport } from './routes/_admin.admin.servers'
import { Route as AdminAdminGameAdminsRouteImport } from './routes/_admin.admin.game-admins'
import { Route as ModAdminNetworkIndexRouteImport } from './routes/_mod.admin.network.index'
import { Route as ModAdminNetworkPlayersbyipRouteImport } from './routes/_mod.admin.network.playersbyip'
import { Route as ModAdminNetworkIphistRouteImport } from './routes/_mod.admin.network.iphist'
import { Route as ModAdminNetworkIpInfoRouteImport } from './routes/_mod.admin.network.ipInfo'
import { Route as ModAdminNetworkCidrblocksRouteImport } from './routes/_mod.admin.network.cidrblocks'
import { Route as ModAdminBanSteamRouteImport } from './routes/_mod.admin.ban.steam'
import { Route as ModAdminBanGroupRouteImport } from './routes/_mod.admin.ban.group'
import { Route as ModAdminBanCidrRouteImport } from './routes/_mod.admin.ban.cidr'
import { Route as ModAdminBanAsnRouteImport } from './routes/_mod.admin.ban.asn'
import { Route as GuestSpeedrunsMapMapNameRouteImport } from './routes/_guest.speedruns.map.$mapName'
import { Route as GuestSpeedrunsIdSpeedrunIdRouteImport } from './routes/_guest.speedruns.id.$speedrunId'
import { Route as AuthStatsWeaponWeapon_idRouteImport } from './routes/_auth.stats.weapon.$weapon_id'
import { Route as AuthForumsThreadForum_thread_idRouteImport } from './routes/_auth.forums.thread.$forum_thread_id'
import { Route as AuthLogsSteamIdRouteImport } from './routes/_auth.logs.$steamId.'

const ModRoute = ModRouteImport.update({
  id: '/_mod',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestIndexRoute = GuestIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRoute,
} as any)
const GuestWikiRoute = GuestWikiRouteImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => GuestRoute,
} as any)
const GuestStvRoute = GuestStvRouteImport.update({
  id: '/stv',
  path: '/stv',
  getParentRoute: () => GuestRoute,
} as any)
const GuestServersRoute = GuestServersRouteImport.update({
  id: '/servers',
  path: '/servers',
  getParentRoute: () => GuestRoute,
} as any)
const GuestPrivacyPolicyRoute = GuestPrivacyPolicyRouteImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => GuestRoute,
} as any)
const GuestPatreonRoute = GuestPatreonRouteImport.update({
  id: '/patreon',
  path: '/patreon',
  getParentRoute: () => GuestRoute,
} as any)
const GuestContestsRoute = GuestContestsRouteImport.update({
  id: '/contests',
  path: '/contests',
  getParentRoute: () => GuestRoute,
} as any)
const GuestChangelogRoute = GuestChangelogRouteImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => GuestRoute,
} as any)
const AuthStatsRoute = AuthStatsRouteImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSettingsRoute = AuthSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)
const AuthReportRoute = AuthReportRouteImport.update({
  id: '/report',
  path: '/report',
  getParentRoute: () => AuthRoute,
} as any)
const AuthPermissionRoute = AuthPermissionRouteImport.update({
  id: '/permission',
  path: '/permission',
  getParentRoute: () => AuthRoute,
} as any)
const AuthPageNotFoundRoute = AuthPageNotFoundRouteImport.update({
  id: '/page-not-found',
  path: '/page-not-found',
  getParentRoute: () => AuthRoute,
} as any)
const AuthNotificationsRoute = AuthNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForumsRoute = AuthForumsRouteImport.update({
  id: '/forums',
  path: '/forums',
  getParentRoute: () => AuthRoute,
} as any)
const AuthChatlogsRoute = AuthChatlogsRouteImport.update({
  id: '/chatlogs',
  path: '/chatlogs',
  getParentRoute: () => AuthRoute,
} as any)
const GuestWikiIndexRoute = GuestWikiIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestWikiRoute,
} as any)
const GuestSpeedrunsIndexRoute = GuestSpeedrunsIndexRouteImport.update({
  id: '/speedruns/',
  path: '/speedruns/',
  getParentRoute: () => GuestRoute,
} as any)
const GuestLoginIndexRoute = GuestLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => GuestRoute,
} as any)
const AuthStatsIndexRoute = AuthStatsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthStatsRoute,
} as any)
const AuthReportIndexRoute = AuthReportIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthReportRoute,
} as any)
const AuthForumsIndexRoute = AuthForumsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthForumsRoute,
} as any)
const ModAdminVotesRoute = ModAdminVotesRouteImport.update({
  id: '/admin/votes',
  path: '/admin/votes',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminReportsRoute = ModAdminReportsRouteImport.update({
  id: '/admin/reports',
  path: '/admin/reports',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminPeopleRoute = ModAdminPeopleRouteImport.update({
  id: '/admin/people',
  path: '/admin/people',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminNewsRoute = ModAdminNewsRouteImport.update({
  id: '/admin/news',
  path: '/admin/news',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminFiltersRoute = ModAdminFiltersRouteImport.update({
  id: '/admin/filters',
  path: '/admin/filters',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminContestsRoute = ModAdminContestsRouteImport.update({
  id: '/admin/contests',
  path: '/admin/contests',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminAppealsRoute = ModAdminAppealsRouteImport.update({
  id: '/admin/appeals',
  path: '/admin/appeals',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminAnticheatRoute = ModAdminAnticheatRouteImport.update({
  id: '/admin/anticheat',
  path: '/admin/anticheat',
  getParentRoute: () => ModRoute,
} as any)
const GuestWikiSlugRoute = GuestWikiSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => GuestWikiRoute,
} as any)
const GuestProfileSteamIdRoute = GuestProfileSteamIdRouteImport.update({
  id: '/profile/$steamId',
  path: '/profile/$steamId',
  getParentRoute: () => GuestRoute,
} as any)
const GuestLoginSuccessRoute = GuestLoginSuccessRouteImport.update({
  id: '/login/success',
  path: '/login/success',
  getParentRoute: () => GuestRoute,
} as any)
const AuthReportReportIdRoute = AuthReportReportIdRouteImport.update({
  id: '/$reportId',
  path: '/$reportId',
  getParentRoute: () => AuthReportRoute,
} as any)
const AuthMatchMatchIdRoute = AuthMatchMatchIdRouteImport.update({
  id: '/match/$matchId',
  path: '/match/$matchId',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForumsForum_idRoute = AuthForumsForum_idRouteImport.update({
  id: '/$forum_id',
  path: '/$forum_id',
  getParentRoute: () => AuthForumsRoute,
} as any)
const AuthContestsContest_idRoute = AuthContestsContest_idRouteImport.update({
  id: '/contests/$contest_id',
  path: '/contests/$contest_id',
  getParentRoute: () => AuthRoute,
} as any)
const AuthBanBan_idRoute = AuthBanBan_idRouteImport.update({
  id: '/ban/$ban_id',
  path: '/ban/$ban_id',
  getParentRoute: () => AuthRoute,
} as any)
const AdminAdminSettingsRoute = AdminAdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAdminServersRoute = AdminAdminServersRouteImport.update({
  id: '/admin/servers',
  path: '/admin/servers',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAdminGameAdminsRoute = AdminAdminGameAdminsRouteImport.update({
  id: '/admin/game-admins',
  path: '/admin/game-admins',
  getParentRoute: () => AdminRoute,
} as any)
const ModAdminNetworkIndexRoute = ModAdminNetworkIndexRouteImport.update({
  id: '/admin/network/',
  path: '/admin/network/',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminNetworkPlayersbyipRoute =
  ModAdminNetworkPlayersbyipRouteImport.update({
    id: '/admin/network/playersbyip',
    path: '/admin/network/playersbyip',
    getParentRoute: () => ModRoute,
  } as any)
const ModAdminNetworkIphistRoute = ModAdminNetworkIphistRouteImport.update({
  id: '/admin/network/iphist',
  path: '/admin/network/iphist',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminNetworkIpInfoRoute = ModAdminNetworkIpInfoRouteImport.update({
  id: '/admin/network/ipInfo',
  path: '/admin/network/ipInfo',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminNetworkCidrblocksRoute =
  ModAdminNetworkCidrblocksRouteImport.update({
    id: '/admin/network/cidrblocks',
    path: '/admin/network/cidrblocks',
    getParentRoute: () => ModRoute,
  } as any)
const ModAdminBanSteamRoute = ModAdminBanSteamRouteImport.update({
  id: '/admin/ban/steam',
  path: '/admin/ban/steam',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminBanGroupRoute = ModAdminBanGroupRouteImport.update({
  id: '/admin/ban/group',
  path: '/admin/ban/group',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminBanCidrRoute = ModAdminBanCidrRouteImport.update({
  id: '/admin/ban/cidr',
  path: '/admin/ban/cidr',
  getParentRoute: () => ModRoute,
} as any)
const ModAdminBanAsnRoute = ModAdminBanAsnRouteImport.update({
  id: '/admin/ban/asn',
  path: '/admin/ban/asn',
  getParentRoute: () => ModRoute,
} as any)
const GuestSpeedrunsMapMapNameRoute =
  GuestSpeedrunsMapMapNameRouteImport.update({
    id: '/speedruns/map/$mapName',
    path: '/speedruns/map/$mapName',
    getParentRoute: () => GuestRoute,
  } as any)
const GuestSpeedrunsIdSpeedrunIdRoute =
  GuestSpeedrunsIdSpeedrunIdRouteImport.update({
    id: '/speedruns/id/$speedrunId',
    path: '/speedruns/id/$speedrunId',
    getParentRoute: () => GuestRoute,
  } as any)
const AuthStatsWeaponWeapon_idRoute =
  AuthStatsWeaponWeapon_idRouteImport.update({
    id: '/weapon/$weapon_id',
    path: '/weapon/$weapon_id',
    getParentRoute: () => AuthStatsRoute,
  } as any)
const AuthForumsThreadForum_thread_idRoute =
  AuthForumsThreadForum_thread_idRouteImport.update({
    id: '/thread/$forum_thread_id',
    path: '/thread/$forum_thread_id',
    getParentRoute: () => AuthForumsRoute,
  } as any)
const AuthLogsSteamIdRoute = AuthLogsSteamIdRouteImport.update({
  id: '/logs/$steamId/',
  path: '/logs/$steamId/',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/chatlogs': typeof AuthChatlogsRoute
  '/forums': typeof AuthForumsRouteWithChildren
  '/logout': typeof AuthLogoutRoute
  '/notifications': typeof AuthNotificationsRoute
  '/page-not-found': typeof AuthPageNotFoundRoute
  '/permission': typeof AuthPermissionRoute
  '/report': typeof AuthReportRouteWithChildren
  '/settings': typeof AuthSettingsRoute
  '/stats': typeof AuthStatsRouteWithChildren
  '/changelog': typeof GuestChangelogRoute
  '/contests': typeof GuestContestsRoute
  '/patreon': typeof GuestPatreonRoute
  '/privacy-policy': typeof GuestPrivacyPolicyRoute
  '/servers': typeof GuestServersRoute
  '/stv': typeof GuestStvRoute
  '/wiki': typeof GuestWikiRouteWithChildren
  '/': typeof GuestIndexRoute
  '/admin/game-admins': typeof AdminAdminGameAdminsRoute
  '/admin/servers': typeof AdminAdminServersRoute
  '/admin/settings': typeof AdminAdminSettingsRoute
  '/ban/$ban_id': typeof AuthBanBan_idRoute
  '/contests/$contest_id': typeof AuthContestsContest_idRoute
  '/forums/$forum_id': typeof AuthForumsForum_idRoute
  '/match/$matchId': typeof AuthMatchMatchIdRoute
  '/report/$reportId': typeof AuthReportReportIdRoute
  '/login/success': typeof GuestLoginSuccessRoute
  '/profile/$steamId': typeof GuestProfileSteamIdRoute
  '/wiki/$slug': typeof GuestWikiSlugRoute
  '/admin/anticheat': typeof ModAdminAnticheatRoute
  '/admin/appeals': typeof ModAdminAppealsRoute
  '/admin/contests': typeof ModAdminContestsRoute
  '/admin/filters': typeof ModAdminFiltersRoute
  '/admin/news': typeof ModAdminNewsRoute
  '/admin/people': typeof ModAdminPeopleRoute
  '/admin/reports': typeof ModAdminReportsRoute
  '/admin/votes': typeof ModAdminVotesRoute
  '/forums/': typeof AuthForumsIndexRoute
  '/report/': typeof AuthReportIndexRoute
  '/stats/': typeof AuthStatsIndexRoute
  '/login': typeof GuestLoginIndexRoute
  '/speedruns': typeof GuestSpeedrunsIndexRoute
  '/wiki/': typeof GuestWikiIndexRoute
  '/logs/$steamId': typeof AuthLogsSteamIdRoute
  '/forums/thread/$forum_thread_id': typeof AuthForumsThreadForum_thread_idRoute
  '/stats/weapon/$weapon_id': typeof AuthStatsWeaponWeapon_idRoute
  '/speedruns/id/$speedrunId': typeof GuestSpeedrunsIdSpeedrunIdRoute
  '/speedruns/map/$mapName': typeof GuestSpeedrunsMapMapNameRoute
  '/admin/ban/asn': typeof ModAdminBanAsnRoute
  '/admin/ban/cidr': typeof ModAdminBanCidrRoute
  '/admin/ban/group': typeof ModAdminBanGroupRoute
  '/admin/ban/steam': typeof ModAdminBanSteamRoute
  '/admin/network/cidrblocks': typeof ModAdminNetworkCidrblocksRoute
  '/admin/network/ipInfo': typeof ModAdminNetworkIpInfoRoute
  '/admin/network/iphist': typeof ModAdminNetworkIphistRoute
  '/admin/network/playersbyip': typeof ModAdminNetworkPlayersbyipRoute
  '/admin/network': typeof ModAdminNetworkIndexRoute
}
export interface FileRoutesByTo {
  '/chatlogs': typeof AuthChatlogsRoute
  '/logout': typeof AuthLogoutRoute
  '/notifications': typeof AuthNotificationsRoute
  '/page-not-found': typeof AuthPageNotFoundRoute
  '/permission': typeof AuthPermissionRoute
  '/settings': typeof AuthSettingsRoute
  '/changelog': typeof GuestChangelogRoute
  '/contests': typeof GuestContestsRoute
  '/patreon': typeof GuestPatreonRoute
  '/privacy-policy': typeof GuestPrivacyPolicyRoute
  '/servers': typeof GuestServersRoute
  '/stv': typeof GuestStvRoute
  '/': typeof GuestIndexRoute
  '/admin/game-admins': typeof AdminAdminGameAdminsRoute
  '/admin/servers': typeof AdminAdminServersRoute
  '/admin/settings': typeof AdminAdminSettingsRoute
  '/ban/$ban_id': typeof AuthBanBan_idRoute
  '/contests/$contest_id': typeof AuthContestsContest_idRoute
  '/forums/$forum_id': typeof AuthForumsForum_idRoute
  '/match/$matchId': typeof AuthMatchMatchIdRoute
  '/report/$reportId': typeof AuthReportReportIdRoute
  '/login/success': typeof GuestLoginSuccessRoute
  '/profile/$steamId': typeof GuestProfileSteamIdRoute
  '/wiki/$slug': typeof GuestWikiSlugRoute
  '/admin/anticheat': typeof ModAdminAnticheatRoute
  '/admin/appeals': typeof ModAdminAppealsRoute
  '/admin/contests': typeof ModAdminContestsRoute
  '/admin/filters': typeof ModAdminFiltersRoute
  '/admin/news': typeof ModAdminNewsRoute
  '/admin/people': typeof ModAdminPeopleRoute
  '/admin/reports': typeof ModAdminReportsRoute
  '/admin/votes': typeof ModAdminVotesRoute
  '/forums': typeof AuthForumsIndexRoute
  '/report': typeof AuthReportIndexRoute
  '/stats': typeof AuthStatsIndexRoute
  '/login': typeof GuestLoginIndexRoute
  '/speedruns': typeof GuestSpeedrunsIndexRoute
  '/wiki': typeof GuestWikiIndexRoute
  '/logs/$steamId': typeof AuthLogsSteamIdRoute
  '/forums/thread/$forum_thread_id': typeof AuthForumsThreadForum_thread_idRoute
  '/stats/weapon/$weapon_id': typeof AuthStatsWeaponWeapon_idRoute
  '/speedruns/id/$speedrunId': typeof GuestSpeedrunsIdSpeedrunIdRoute
  '/speedruns/map/$mapName': typeof GuestSpeedrunsMapMapNameRoute
  '/admin/ban/asn': typeof ModAdminBanAsnRoute
  '/admin/ban/cidr': typeof ModAdminBanCidrRoute
  '/admin/ban/group': typeof ModAdminBanGroupRoute
  '/admin/ban/steam': typeof ModAdminBanSteamRoute
  '/admin/network/cidrblocks': typeof ModAdminNetworkCidrblocksRoute
  '/admin/network/ipInfo': typeof ModAdminNetworkIpInfoRoute
  '/admin/network/iphist': typeof ModAdminNetworkIphistRoute
  '/admin/network/playersbyip': typeof ModAdminNetworkPlayersbyipRoute
  '/admin/network': typeof ModAdminNetworkIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_admin': typeof AdminRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/_mod': typeof ModRouteWithChildren
  '/_auth/chatlogs': typeof AuthChatlogsRoute
  '/_auth/forums': typeof AuthForumsRouteWithChildren
  '/_auth/logout': typeof AuthLogoutRoute
  '/_auth/notifications': typeof AuthNotificationsRoute
  '/_auth/page-not-found': typeof AuthPageNotFoundRoute
  '/_auth/permission': typeof AuthPermissionRoute
  '/_auth/report': typeof AuthReportRouteWithChildren
  '/_auth/settings': typeof AuthSettingsRoute
  '/_auth/stats': typeof AuthStatsRouteWithChildren
  '/_guest/changelog': typeof GuestChangelogRoute
  '/_guest/contests': typeof GuestContestsRoute
  '/_guest/patreon': typeof GuestPatreonRoute
  '/_guest/privacy-policy': typeof GuestPrivacyPolicyRoute
  '/_guest/servers': typeof GuestServersRoute
  '/_guest/stv': typeof GuestStvRoute
  '/_guest/wiki': typeof GuestWikiRouteWithChildren
  '/_guest/': typeof GuestIndexRoute
  '/_admin/admin/game-admins': typeof AdminAdminGameAdminsRoute
  '/_admin/admin/servers': typeof AdminAdminServersRoute
  '/_admin/admin/settings': typeof AdminAdminSettingsRoute
  '/_auth/ban/$ban_id': typeof AuthBanBan_idRoute
  '/_auth/contests/$contest_id': typeof AuthContestsContest_idRoute
  '/_auth/forums/$forum_id': typeof AuthForumsForum_idRoute
  '/_auth/match/$matchId': typeof AuthMatchMatchIdRoute
  '/_auth/report/$reportId': typeof AuthReportReportIdRoute
  '/_guest/login/success': typeof GuestLoginSuccessRoute
  '/_guest/profile/$steamId': typeof GuestProfileSteamIdRoute
  '/_guest/wiki/$slug': typeof GuestWikiSlugRoute
  '/_mod/admin/anticheat': typeof ModAdminAnticheatRoute
  '/_mod/admin/appeals': typeof ModAdminAppealsRoute
  '/_mod/admin/contests': typeof ModAdminContestsRoute
  '/_mod/admin/filters': typeof ModAdminFiltersRoute
  '/_mod/admin/news': typeof ModAdminNewsRoute
  '/_mod/admin/people': typeof ModAdminPeopleRoute
  '/_mod/admin/reports': typeof ModAdminReportsRoute
  '/_mod/admin/votes': typeof ModAdminVotesRoute
  '/_auth/forums/': typeof AuthForumsIndexRoute
  '/_auth/report/': typeof AuthReportIndexRoute
  '/_auth/stats/': typeof AuthStatsIndexRoute
  '/_guest/login/': typeof GuestLoginIndexRoute
  '/_guest/speedruns/': typeof GuestSpeedrunsIndexRoute
  '/_guest/wiki/': typeof GuestWikiIndexRoute
  '/_auth/logs/$steamId/': typeof AuthLogsSteamIdRoute
  '/_auth/forums/thread/$forum_thread_id': typeof AuthForumsThreadForum_thread_idRoute
  '/_auth/stats/weapon/$weapon_id': typeof AuthStatsWeaponWeapon_idRoute
  '/_guest/speedruns/id/$speedrunId': typeof GuestSpeedrunsIdSpeedrunIdRoute
  '/_guest/speedruns/map/$mapName': typeof GuestSpeedrunsMapMapNameRoute
  '/_mod/admin/ban/asn': typeof ModAdminBanAsnRoute
  '/_mod/admin/ban/cidr': typeof ModAdminBanCidrRoute
  '/_mod/admin/ban/group': typeof ModAdminBanGroupRoute
  '/_mod/admin/ban/steam': typeof ModAdminBanSteamRoute
  '/_mod/admin/network/cidrblocks': typeof ModAdminNetworkCidrblocksRoute
  '/_mod/admin/network/ipInfo': typeof ModAdminNetworkIpInfoRoute
  '/_mod/admin/network/iphist': typeof ModAdminNetworkIphistRoute
  '/_mod/admin/network/playersbyip': typeof ModAdminNetworkPlayersbyipRoute
  '/_mod/admin/network/': typeof ModAdminNetworkIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/chatlogs'
    | '/forums'
    | '/logout'
    | '/notifications'
    | '/page-not-found'
    | '/permission'
    | '/report'
    | '/settings'
    | '/stats'
    | '/changelog'
    | '/contests'
    | '/patreon'
    | '/privacy-policy'
    | '/servers'
    | '/stv'
    | '/wiki'
    | '/'
    | '/admin/game-admins'
    | '/admin/servers'
    | '/admin/settings'
    | '/ban/$ban_id'
    | '/contests/$contest_id'
    | '/forums/$forum_id'
    | '/match/$matchId'
    | '/report/$reportId'
    | '/login/success'
    | '/profile/$steamId'
    | '/wiki/$slug'
    | '/admin/anticheat'
    | '/admin/appeals'
    | '/admin/contests'
    | '/admin/filters'
    | '/admin/news'
    | '/admin/people'
    | '/admin/reports'
    | '/admin/votes'
    | '/forums/'
    | '/report/'
    | '/stats/'
    | '/login'
    | '/speedruns'
    | '/wiki/'
    | '/logs/$steamId'
    | '/forums/thread/$forum_thread_id'
    | '/stats/weapon/$weapon_id'
    | '/speedruns/id/$speedrunId'
    | '/speedruns/map/$mapName'
    | '/admin/ban/asn'
    | '/admin/ban/cidr'
    | '/admin/ban/group'
    | '/admin/ban/steam'
    | '/admin/network/cidrblocks'
    | '/admin/network/ipInfo'
    | '/admin/network/iphist'
    | '/admin/network/playersbyip'
    | '/admin/network'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/chatlogs'
    | '/logout'
    | '/notifications'
    | '/page-not-found'
    | '/permission'
    | '/settings'
    | '/changelog'
    | '/contests'
    | '/patreon'
    | '/privacy-policy'
    | '/servers'
    | '/stv'
    | '/'
    | '/admin/game-admins'
    | '/admin/servers'
    | '/admin/settings'
    | '/ban/$ban_id'
    | '/contests/$contest_id'
    | '/forums/$forum_id'
    | '/match/$matchId'
    | '/report/$reportId'
    | '/login/success'
    | '/profile/$steamId'
    | '/wiki/$slug'
    | '/admin/anticheat'
    | '/admin/appeals'
    | '/admin/contests'
    | '/admin/filters'
    | '/admin/news'
    | '/admin/people'
    | '/admin/reports'
    | '/admin/votes'
    | '/forums'
    | '/report'
    | '/stats'
    | '/login'
    | '/speedruns'
    | '/wiki'
    | '/logs/$steamId'
    | '/forums/thread/$forum_thread_id'
    | '/stats/weapon/$weapon_id'
    | '/speedruns/id/$speedrunId'
    | '/speedruns/map/$mapName'
    | '/admin/ban/asn'
    | '/admin/ban/cidr'
    | '/admin/ban/group'
    | '/admin/ban/steam'
    | '/admin/network/cidrblocks'
    | '/admin/network/ipInfo'
    | '/admin/network/iphist'
    | '/admin/network/playersbyip'
    | '/admin/network'
  id:
    | '__root__'
    | '/_admin'
    | '/_auth'
    | '/_guest'
    | '/_mod'
    | '/_auth/chatlogs'
    | '/_auth/forums'
    | '/_auth/logout'
    | '/_auth/notifications'
    | '/_auth/page-not-found'
    | '/_auth/permission'
    | '/_auth/report'
    | '/_auth/settings'
    | '/_auth/stats'
    | '/_guest/changelog'
    | '/_guest/contests'
    | '/_guest/patreon'
    | '/_guest/privacy-policy'
    | '/_guest/servers'
    | '/_guest/stv'
    | '/_guest/wiki'
    | '/_guest/'
    | '/_admin/admin/game-admins'
    | '/_admin/admin/servers'
    | '/_admin/admin/settings'
    | '/_auth/ban/$ban_id'
    | '/_auth/contests/$contest_id'
    | '/_auth/forums/$forum_id'
    | '/_auth/match/$matchId'
    | '/_auth/report/$reportId'
    | '/_guest/login/success'
    | '/_guest/profile/$steamId'
    | '/_guest/wiki/$slug'
    | '/_mod/admin/anticheat'
    | '/_mod/admin/appeals'
    | '/_mod/admin/contests'
    | '/_mod/admin/filters'
    | '/_mod/admin/news'
    | '/_mod/admin/people'
    | '/_mod/admin/reports'
    | '/_mod/admin/votes'
    | '/_auth/forums/'
    | '/_auth/report/'
    | '/_auth/stats/'
    | '/_guest/login/'
    | '/_guest/speedruns/'
    | '/_guest/wiki/'
    | '/_auth/logs/$steamId/'
    | '/_auth/forums/thread/$forum_thread_id'
    | '/_auth/stats/weapon/$weapon_id'
    | '/_guest/speedruns/id/$speedrunId'
    | '/_guest/speedruns/map/$mapName'
    | '/_mod/admin/ban/asn'
    | '/_mod/admin/ban/cidr'
    | '/_mod/admin/ban/group'
    | '/_mod/admin/ban/steam'
    | '/_mod/admin/network/cidrblocks'
    | '/_mod/admin/network/ipInfo'
    | '/_mod/admin/network/iphist'
    | '/_mod/admin/network/playersbyip'
    | '/_mod/admin/network/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminRoute: typeof AdminRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
  ModRoute: typeof ModRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_mod': {
      id: '/_mod'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ModRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/wiki': {
      id: '/_guest/wiki'
      path: '/wiki'
      fullPath: '/wiki'
      preLoaderRoute: typeof GuestWikiRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/stv': {
      id: '/_guest/stv'
      path: '/stv'
      fullPath: '/stv'
      preLoaderRoute: typeof GuestStvRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/servers': {
      id: '/_guest/servers'
      path: '/servers'
      fullPath: '/servers'
      preLoaderRoute: typeof GuestServersRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/privacy-policy': {
      id: '/_guest/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof GuestPrivacyPolicyRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/patreon': {
      id: '/_guest/patreon'
      path: '/patreon'
      fullPath: '/patreon'
      preLoaderRoute: typeof GuestPatreonRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/contests': {
      id: '/_guest/contests'
      path: '/contests'
      fullPath: '/contests'
      preLoaderRoute: typeof GuestContestsRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/changelog': {
      id: '/_guest/changelog'
      path: '/changelog'
      fullPath: '/changelog'
      preLoaderRoute: typeof GuestChangelogRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_auth/stats': {
      id: '/_auth/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof AuthStatsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/report': {
      id: '/_auth/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof AuthReportRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/permission': {
      id: '/_auth/permission'
      path: '/permission'
      fullPath: '/permission'
      preLoaderRoute: typeof AuthPermissionRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/page-not-found': {
      id: '/_auth/page-not-found'
      path: '/page-not-found'
      fullPath: '/page-not-found'
      preLoaderRoute: typeof AuthPageNotFoundRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/notifications': {
      id: '/_auth/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AuthNotificationsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forums': {
      id: '/_auth/forums'
      path: '/forums'
      fullPath: '/forums'
      preLoaderRoute: typeof AuthForumsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/chatlogs': {
      id: '/_auth/chatlogs'
      path: '/chatlogs'
      fullPath: '/chatlogs'
      preLoaderRoute: typeof AuthChatlogsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_guest/wiki/': {
      id: '/_guest/wiki/'
      path: '/'
      fullPath: '/wiki/'
      preLoaderRoute: typeof GuestWikiIndexRouteImport
      parentRoute: typeof GuestWikiRoute
    }
    '/_guest/speedruns/': {
      id: '/_guest/speedruns/'
      path: '/speedruns'
      fullPath: '/speedruns'
      preLoaderRoute: typeof GuestSpeedrunsIndexRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/login/': {
      id: '/_guest/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginIndexRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_auth/stats/': {
      id: '/_auth/stats/'
      path: '/'
      fullPath: '/stats/'
      preLoaderRoute: typeof AuthStatsIndexRouteImport
      parentRoute: typeof AuthStatsRoute
    }
    '/_auth/report/': {
      id: '/_auth/report/'
      path: '/'
      fullPath: '/report/'
      preLoaderRoute: typeof AuthReportIndexRouteImport
      parentRoute: typeof AuthReportRoute
    }
    '/_auth/forums/': {
      id: '/_auth/forums/'
      path: '/'
      fullPath: '/forums/'
      preLoaderRoute: typeof AuthForumsIndexRouteImport
      parentRoute: typeof AuthForumsRoute
    }
    '/_mod/admin/votes': {
      id: '/_mod/admin/votes'
      path: '/admin/votes'
      fullPath: '/admin/votes'
      preLoaderRoute: typeof ModAdminVotesRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/reports': {
      id: '/_mod/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof ModAdminReportsRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/people': {
      id: '/_mod/admin/people'
      path: '/admin/people'
      fullPath: '/admin/people'
      preLoaderRoute: typeof ModAdminPeopleRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/news': {
      id: '/_mod/admin/news'
      path: '/admin/news'
      fullPath: '/admin/news'
      preLoaderRoute: typeof ModAdminNewsRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/filters': {
      id: '/_mod/admin/filters'
      path: '/admin/filters'
      fullPath: '/admin/filters'
      preLoaderRoute: typeof ModAdminFiltersRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/contests': {
      id: '/_mod/admin/contests'
      path: '/admin/contests'
      fullPath: '/admin/contests'
      preLoaderRoute: typeof ModAdminContestsRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/appeals': {
      id: '/_mod/admin/appeals'
      path: '/admin/appeals'
      fullPath: '/admin/appeals'
      preLoaderRoute: typeof ModAdminAppealsRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/anticheat': {
      id: '/_mod/admin/anticheat'
      path: '/admin/anticheat'
      fullPath: '/admin/anticheat'
      preLoaderRoute: typeof ModAdminAnticheatRouteImport
      parentRoute: typeof ModRoute
    }
    '/_guest/wiki/$slug': {
      id: '/_guest/wiki/$slug'
      path: '/$slug'
      fullPath: '/wiki/$slug'
      preLoaderRoute: typeof GuestWikiSlugRouteImport
      parentRoute: typeof GuestWikiRoute
    }
    '/_guest/profile/$steamId': {
      id: '/_guest/profile/$steamId'
      path: '/profile/$steamId'
      fullPath: '/profile/$steamId'
      preLoaderRoute: typeof GuestProfileSteamIdRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/login/success': {
      id: '/_guest/login/success'
      path: '/login/success'
      fullPath: '/login/success'
      preLoaderRoute: typeof GuestLoginSuccessRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_auth/report/$reportId': {
      id: '/_auth/report/$reportId'
      path: '/$reportId'
      fullPath: '/report/$reportId'
      preLoaderRoute: typeof AuthReportReportIdRouteImport
      parentRoute: typeof AuthReportRoute
    }
    '/_auth/match/$matchId': {
      id: '/_auth/match/$matchId'
      path: '/match/$matchId'
      fullPath: '/match/$matchId'
      preLoaderRoute: typeof AuthMatchMatchIdRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forums/$forum_id': {
      id: '/_auth/forums/$forum_id'
      path: '/$forum_id'
      fullPath: '/forums/$forum_id'
      preLoaderRoute: typeof AuthForumsForum_idRouteImport
      parentRoute: typeof AuthForumsRoute
    }
    '/_auth/contests/$contest_id': {
      id: '/_auth/contests/$contest_id'
      path: '/contests/$contest_id'
      fullPath: '/contests/$contest_id'
      preLoaderRoute: typeof AuthContestsContest_idRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/ban/$ban_id': {
      id: '/_auth/ban/$ban_id'
      path: '/ban/$ban_id'
      fullPath: '/ban/$ban_id'
      preLoaderRoute: typeof AuthBanBan_idRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_admin/admin/settings': {
      id: '/_admin/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminAdminSettingsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/admin/servers': {
      id: '/_admin/admin/servers'
      path: '/admin/servers'
      fullPath: '/admin/servers'
      preLoaderRoute: typeof AdminAdminServersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_admin/admin/game-admins': {
      id: '/_admin/admin/game-admins'
      path: '/admin/game-admins'
      fullPath: '/admin/game-admins'
      preLoaderRoute: typeof AdminAdminGameAdminsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_mod/admin/network/': {
      id: '/_mod/admin/network/'
      path: '/admin/network'
      fullPath: '/admin/network'
      preLoaderRoute: typeof ModAdminNetworkIndexRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/network/playersbyip': {
      id: '/_mod/admin/network/playersbyip'
      path: '/admin/network/playersbyip'
      fullPath: '/admin/network/playersbyip'
      preLoaderRoute: typeof ModAdminNetworkPlayersbyipRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/network/iphist': {
      id: '/_mod/admin/network/iphist'
      path: '/admin/network/iphist'
      fullPath: '/admin/network/iphist'
      preLoaderRoute: typeof ModAdminNetworkIphistRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/network/ipInfo': {
      id: '/_mod/admin/network/ipInfo'
      path: '/admin/network/ipInfo'
      fullPath: '/admin/network/ipInfo'
      preLoaderRoute: typeof ModAdminNetworkIpInfoRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/network/cidrblocks': {
      id: '/_mod/admin/network/cidrblocks'
      path: '/admin/network/cidrblocks'
      fullPath: '/admin/network/cidrblocks'
      preLoaderRoute: typeof ModAdminNetworkCidrblocksRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/ban/steam': {
      id: '/_mod/admin/ban/steam'
      path: '/admin/ban/steam'
      fullPath: '/admin/ban/steam'
      preLoaderRoute: typeof ModAdminBanSteamRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/ban/group': {
      id: '/_mod/admin/ban/group'
      path: '/admin/ban/group'
      fullPath: '/admin/ban/group'
      preLoaderRoute: typeof ModAdminBanGroupRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/ban/cidr': {
      id: '/_mod/admin/ban/cidr'
      path: '/admin/ban/cidr'
      fullPath: '/admin/ban/cidr'
      preLoaderRoute: typeof ModAdminBanCidrRouteImport
      parentRoute: typeof ModRoute
    }
    '/_mod/admin/ban/asn': {
      id: '/_mod/admin/ban/asn'
      path: '/admin/ban/asn'
      fullPath: '/admin/ban/asn'
      preLoaderRoute: typeof ModAdminBanAsnRouteImport
      parentRoute: typeof ModRoute
    }
    '/_guest/speedruns/map/$mapName': {
      id: '/_guest/speedruns/map/$mapName'
      path: '/speedruns/map/$mapName'
      fullPath: '/speedruns/map/$mapName'
      preLoaderRoute: typeof GuestSpeedrunsMapMapNameRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/speedruns/id/$speedrunId': {
      id: '/_guest/speedruns/id/$speedrunId'
      path: '/speedruns/id/$speedrunId'
      fullPath: '/speedruns/id/$speedrunId'
      preLoaderRoute: typeof GuestSpeedrunsIdSpeedrunIdRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_auth/stats/weapon/$weapon_id': {
      id: '/_auth/stats/weapon/$weapon_id'
      path: '/weapon/$weapon_id'
      fullPath: '/stats/weapon/$weapon_id'
      preLoaderRoute: typeof AuthStatsWeaponWeapon_idRouteImport
      parentRoute: typeof AuthStatsRoute
    }
    '/_auth/forums/thread/$forum_thread_id': {
      id: '/_auth/forums/thread/$forum_thread_id'
      path: '/thread/$forum_thread_id'
      fullPath: '/forums/thread/$forum_thread_id'
      preLoaderRoute: typeof AuthForumsThreadForum_thread_idRouteImport
      parentRoute: typeof AuthForumsRoute
    }
    '/_auth/logs/$steamId/': {
      id: '/_auth/logs/$steamId/'
      path: '/logs/$steamId'
      fullPath: '/logs/$steamId'
      preLoaderRoute: typeof AuthLogsSteamIdRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AdminRouteChildren {
  AdminAdminGameAdminsRoute: typeof AdminAdminGameAdminsRoute
  AdminAdminServersRoute: typeof AdminAdminServersRoute
  AdminAdminSettingsRoute: typeof AdminAdminSettingsRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminGameAdminsRoute: AdminAdminGameAdminsRoute,
  AdminAdminServersRoute: AdminAdminServersRoute,
  AdminAdminSettingsRoute: AdminAdminSettingsRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuthForumsRouteChildren {
  AuthForumsForum_idRoute: typeof AuthForumsForum_idRoute
  AuthForumsIndexRoute: typeof AuthForumsIndexRoute
  AuthForumsThreadForum_thread_idRoute: typeof AuthForumsThreadForum_thread_idRoute
}

const AuthForumsRouteChildren: AuthForumsRouteChildren = {
  AuthForumsForum_idRoute: AuthForumsForum_idRoute,
  AuthForumsIndexRoute: AuthForumsIndexRoute,
  AuthForumsThreadForum_thread_idRoute: AuthForumsThreadForum_thread_idRoute,
}

const AuthForumsRouteWithChildren = AuthForumsRoute._addFileChildren(
  AuthForumsRouteChildren,
)

interface AuthReportRouteChildren {
  AuthReportReportIdRoute: typeof AuthReportReportIdRoute
  AuthReportIndexRoute: typeof AuthReportIndexRoute
}

const AuthReportRouteChildren: AuthReportRouteChildren = {
  AuthReportReportIdRoute: AuthReportReportIdRoute,
  AuthReportIndexRoute: AuthReportIndexRoute,
}

const AuthReportRouteWithChildren = AuthReportRoute._addFileChildren(
  AuthReportRouteChildren,
)

interface AuthStatsRouteChildren {
  AuthStatsIndexRoute: typeof AuthStatsIndexRoute
  AuthStatsWeaponWeapon_idRoute: typeof AuthStatsWeaponWeapon_idRoute
}

const AuthStatsRouteChildren: AuthStatsRouteChildren = {
  AuthStatsIndexRoute: AuthStatsIndexRoute,
  AuthStatsWeaponWeapon_idRoute: AuthStatsWeaponWeapon_idRoute,
}

const AuthStatsRouteWithChildren = AuthStatsRoute._addFileChildren(
  AuthStatsRouteChildren,
)

interface AuthRouteChildren {
  AuthChatlogsRoute: typeof AuthChatlogsRoute
  AuthForumsRoute: typeof AuthForumsRouteWithChildren
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthNotificationsRoute: typeof AuthNotificationsRoute
  AuthPageNotFoundRoute: typeof AuthPageNotFoundRoute
  AuthPermissionRoute: typeof AuthPermissionRoute
  AuthReportRoute: typeof AuthReportRouteWithChildren
  AuthSettingsRoute: typeof AuthSettingsRoute
  AuthStatsRoute: typeof AuthStatsRouteWithChildren
  AuthBanBan_idRoute: typeof AuthBanBan_idRoute
  AuthContestsContest_idRoute: typeof AuthContestsContest_idRoute
  AuthMatchMatchIdRoute: typeof AuthMatchMatchIdRoute
  AuthLogsSteamIdRoute: typeof AuthLogsSteamIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthChatlogsRoute: AuthChatlogsRoute,
  AuthForumsRoute: AuthForumsRouteWithChildren,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthNotificationsRoute: AuthNotificationsRoute,
  AuthPageNotFoundRoute: AuthPageNotFoundRoute,
  AuthPermissionRoute: AuthPermissionRoute,
  AuthReportRoute: AuthReportRouteWithChildren,
  AuthSettingsRoute: AuthSettingsRoute,
  AuthStatsRoute: AuthStatsRouteWithChildren,
  AuthBanBan_idRoute: AuthBanBan_idRoute,
  AuthContestsContest_idRoute: AuthContestsContest_idRoute,
  AuthMatchMatchIdRoute: AuthMatchMatchIdRoute,
  AuthLogsSteamIdRoute: AuthLogsSteamIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface GuestWikiRouteChildren {
  GuestWikiSlugRoute: typeof GuestWikiSlugRoute
  GuestWikiIndexRoute: typeof GuestWikiIndexRoute
}

const GuestWikiRouteChildren: GuestWikiRouteChildren = {
  GuestWikiSlugRoute: GuestWikiSlugRoute,
  GuestWikiIndexRoute: GuestWikiIndexRoute,
}

const GuestWikiRouteWithChildren = GuestWikiRoute._addFileChildren(
  GuestWikiRouteChildren,
)

interface GuestRouteChildren {
  GuestChangelogRoute: typeof GuestChangelogRoute
  GuestContestsRoute: typeof GuestContestsRoute
  GuestPatreonRoute: typeof GuestPatreonRoute
  GuestPrivacyPolicyRoute: typeof GuestPrivacyPolicyRoute
  GuestServersRoute: typeof GuestServersRoute
  GuestStvRoute: typeof GuestStvRoute
  GuestWikiRoute: typeof GuestWikiRouteWithChildren
  GuestIndexRoute: typeof GuestIndexRoute
  GuestLoginSuccessRoute: typeof GuestLoginSuccessRoute
  GuestProfileSteamIdRoute: typeof GuestProfileSteamIdRoute
  GuestLoginIndexRoute: typeof GuestLoginIndexRoute
  GuestSpeedrunsIndexRoute: typeof GuestSpeedrunsIndexRoute
  GuestSpeedrunsIdSpeedrunIdRoute: typeof GuestSpeedrunsIdSpeedrunIdRoute
  GuestSpeedrunsMapMapNameRoute: typeof GuestSpeedrunsMapMapNameRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestChangelogRoute: GuestChangelogRoute,
  GuestContestsRoute: GuestContestsRoute,
  GuestPatreonRoute: GuestPatreonRoute,
  GuestPrivacyPolicyRoute: GuestPrivacyPolicyRoute,
  GuestServersRoute: GuestServersRoute,
  GuestStvRoute: GuestStvRoute,
  GuestWikiRoute: GuestWikiRouteWithChildren,
  GuestIndexRoute: GuestIndexRoute,
  GuestLoginSuccessRoute: GuestLoginSuccessRoute,
  GuestProfileSteamIdRoute: GuestProfileSteamIdRoute,
  GuestLoginIndexRoute: GuestLoginIndexRoute,
  GuestSpeedrunsIndexRoute: GuestSpeedrunsIndexRoute,
  GuestSpeedrunsIdSpeedrunIdRoute: GuestSpeedrunsIdSpeedrunIdRoute,
  GuestSpeedrunsMapMapNameRoute: GuestSpeedrunsMapMapNameRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

interface ModRouteChildren {
  ModAdminAnticheatRoute: typeof ModAdminAnticheatRoute
  ModAdminAppealsRoute: typeof ModAdminAppealsRoute
  ModAdminContestsRoute: typeof ModAdminContestsRoute
  ModAdminFiltersRoute: typeof ModAdminFiltersRoute
  ModAdminNewsRoute: typeof ModAdminNewsRoute
  ModAdminPeopleRoute: typeof ModAdminPeopleRoute
  ModAdminReportsRoute: typeof ModAdminReportsRoute
  ModAdminVotesRoute: typeof ModAdminVotesRoute
  ModAdminBanAsnRoute: typeof ModAdminBanAsnRoute
  ModAdminBanCidrRoute: typeof ModAdminBanCidrRoute
  ModAdminBanGroupRoute: typeof ModAdminBanGroupRoute
  ModAdminBanSteamRoute: typeof ModAdminBanSteamRoute
  ModAdminNetworkCidrblocksRoute: typeof ModAdminNetworkCidrblocksRoute
  ModAdminNetworkIpInfoRoute: typeof ModAdminNetworkIpInfoRoute
  ModAdminNetworkIphistRoute: typeof ModAdminNetworkIphistRoute
  ModAdminNetworkPlayersbyipRoute: typeof ModAdminNetworkPlayersbyipRoute
  ModAdminNetworkIndexRoute: typeof ModAdminNetworkIndexRoute
}

const ModRouteChildren: ModRouteChildren = {
  ModAdminAnticheatRoute: ModAdminAnticheatRoute,
  ModAdminAppealsRoute: ModAdminAppealsRoute,
  ModAdminContestsRoute: ModAdminContestsRoute,
  ModAdminFiltersRoute: ModAdminFiltersRoute,
  ModAdminNewsRoute: ModAdminNewsRoute,
  ModAdminPeopleRoute: ModAdminPeopleRoute,
  ModAdminReportsRoute: ModAdminReportsRoute,
  ModAdminVotesRoute: ModAdminVotesRoute,
  ModAdminBanAsnRoute: ModAdminBanAsnRoute,
  ModAdminBanCidrRoute: ModAdminBanCidrRoute,
  ModAdminBanGroupRoute: ModAdminBanGroupRoute,
  ModAdminBanSteamRoute: ModAdminBanSteamRoute,
  ModAdminNetworkCidrblocksRoute: ModAdminNetworkCidrblocksRoute,
  ModAdminNetworkIpInfoRoute: ModAdminNetworkIpInfoRoute,
  ModAdminNetworkIphistRoute: ModAdminNetworkIphistRoute,
  ModAdminNetworkPlayersbyipRoute: ModAdminNetworkPlayersbyipRoute,
  ModAdminNetworkIndexRoute: ModAdminNetworkIndexRoute,
}

const ModRouteWithChildren = ModRoute._addFileChildren(ModRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
  ModRoute: ModRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
