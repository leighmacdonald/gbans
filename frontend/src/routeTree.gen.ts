/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ModImport } from './routes/_mod'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthImport } from './routes/_auth'
import { Route as AdminImport } from './routes/_admin'
import { Route as GuestIndexImport } from './routes/_guest.index'
import { Route as GuestWikiImport } from './routes/_guest.wiki'
import { Route as GuestStvImport } from './routes/_guest.stv'
import { Route as GuestServersImport } from './routes/_guest.servers'
import { Route as GuestPrivacyPolicyImport } from './routes/_guest.privacy-policy'
import { Route as GuestPatreonImport } from './routes/_guest.patreon'
import { Route as GuestContestsImport } from './routes/_guest.contests'
import { Route as GuestChangelogImport } from './routes/_guest.changelog'
import { Route as AuthStatsImport } from './routes/_auth.stats'
import { Route as AuthSettingsImport } from './routes/_auth.settings'
import { Route as AuthReportImport } from './routes/_auth.report'
import { Route as AuthPermissionImport } from './routes/_auth.permission'
import { Route as AuthPageNotFoundImport } from './routes/_auth.page-not-found'
import { Route as AuthNotificationsImport } from './routes/_auth.notifications'
import { Route as AuthLogoutImport } from './routes/_auth.logout'
import { Route as AuthForumsImport } from './routes/_auth.forums'
import { Route as AuthChatlogsImport } from './routes/_auth.chatlogs'
import { Route as GuestWikiIndexImport } from './routes/_guest.wiki.index'
import { Route as GuestLoginIndexImport } from './routes/_guest.login.index'
import { Route as AuthStatsIndexImport } from './routes/_auth.stats.index'
import { Route as AuthReportIndexImport } from './routes/_auth.report.index'
import { Route as AuthForumsIndexImport } from './routes/_auth.forums.index'
import { Route as ModAdminVotesImport } from './routes/_mod.admin.votes'
import { Route as ModAdminReportsImport } from './routes/_mod.admin.reports'
import { Route as ModAdminPeopleImport } from './routes/_mod.admin.people'
import { Route as ModAdminNewsImport } from './routes/_mod.admin.news'
import { Route as ModAdminFiltersImport } from './routes/_mod.admin.filters'
import { Route as ModAdminContestsImport } from './routes/_mod.admin.contests'
import { Route as ModAdminAppealsImport } from './routes/_mod.admin.appeals'
import { Route as GuestWikiSlugImport } from './routes/_guest.wiki.$slug'
import { Route as GuestProfileSteamIdImport } from './routes/_guest.profile.$steamId'
import { Route as GuestLoginSuccessImport } from './routes/_guest.login.success'
import { Route as AuthReportReportIdImport } from './routes/_auth.report.$reportId'
import { Route as AuthMatchMatchIdImport } from './routes/_auth.match.$matchId'
import { Route as AuthForumsForumidImport } from './routes/_auth.forums.$forum_id'
import { Route as AuthContestsContestidImport } from './routes/_auth.contests.$contest_id'
import { Route as AuthBanBanidImport } from './routes/_auth.ban.$ban_id'
import { Route as AdminAdminSettingsImport } from './routes/_admin.admin.settings'
import { Route as AdminAdminServersImport } from './routes/_admin.admin.servers'
import { Route as AdminAdminGameAdminsImport } from './routes/_admin.admin.game-admins'
import { Route as ModAdminNetworkIndexImport } from './routes/_mod.admin.network.index'
import { Route as ModAdminNetworkPlayersbyipImport } from './routes/_mod.admin.network.playersbyip'
import { Route as ModAdminNetworkIphistImport } from './routes/_mod.admin.network.iphist'
import { Route as ModAdminNetworkIpInfoImport } from './routes/_mod.admin.network.ipInfo'
import { Route as ModAdminNetworkCidrblocksImport } from './routes/_mod.admin.network.cidrblocks'
import { Route as ModAdminBanSteamImport } from './routes/_mod.admin.ban.steam'
import { Route as ModAdminBanGroupImport } from './routes/_mod.admin.ban.group'
import { Route as ModAdminBanCidrImport } from './routes/_mod.admin.ban.cidr'
import { Route as ModAdminBanAsnImport } from './routes/_mod.admin.ban.asn'
import { Route as AuthStatsWeaponWeaponidImport } from './routes/_auth.stats.weapon.$weapon_id'
import { Route as AuthForumsThreadForumthreadidImport } from './routes/_auth.forums.thread.$forum_thread_id'
import { Route as AuthLogsSteamIdImport } from './routes/_auth.logs.$steamId.'

// Create/Update Routes

const ModRoute = ModImport.update({
  id: '/_mod',
  getParentRoute: () => rootRoute,
} as any)

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const GuestIndexRoute = GuestIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestRoute,
} as any)

const GuestWikiRoute = GuestWikiImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => GuestRoute,
} as any)

const GuestStvRoute = GuestStvImport.update({
  id: '/stv',
  path: '/stv',
  getParentRoute: () => GuestRoute,
} as any)

const GuestServersRoute = GuestServersImport.update({
  id: '/servers',
  path: '/servers',
  getParentRoute: () => GuestRoute,
} as any)

const GuestPrivacyPolicyRoute = GuestPrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => GuestRoute,
} as any)

const GuestPatreonRoute = GuestPatreonImport.update({
  id: '/patreon',
  path: '/patreon',
  getParentRoute: () => GuestRoute,
} as any)

const GuestContestsRoute = GuestContestsImport.update({
  id: '/contests',
  path: '/contests',
  getParentRoute: () => GuestRoute,
} as any)

const GuestChangelogRoute = GuestChangelogImport.update({
  id: '/changelog',
  path: '/changelog',
  getParentRoute: () => GuestRoute,
} as any)

const AuthStatsRoute = AuthStatsImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSettingsRoute = AuthSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthReportRoute = AuthReportImport.update({
  id: '/report',
  path: '/report',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPermissionRoute = AuthPermissionImport.update({
  id: '/permission',
  path: '/permission',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPageNotFoundRoute = AuthPageNotFoundImport.update({
  id: '/page-not-found',
  path: '/page-not-found',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNotificationsRoute = AuthNotificationsImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForumsRoute = AuthForumsImport.update({
  id: '/forums',
  path: '/forums',
  getParentRoute: () => AuthRoute,
} as any)

const AuthChatlogsRoute = AuthChatlogsImport.update({
  id: '/chatlogs',
  path: '/chatlogs',
  getParentRoute: () => AuthRoute,
} as any)

const GuestWikiIndexRoute = GuestWikiIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GuestWikiRoute,
} as any)

const GuestLoginIndexRoute = GuestLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => GuestRoute,
} as any)

const AuthStatsIndexRoute = AuthStatsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthStatsRoute,
} as any)

const AuthReportIndexRoute = AuthReportIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthReportRoute,
} as any)

const AuthForumsIndexRoute = AuthForumsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthForumsRoute,
} as any)

const ModAdminVotesRoute = ModAdminVotesImport.update({
  id: '/admin/votes',
  path: '/admin/votes',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminReportsRoute = ModAdminReportsImport.update({
  id: '/admin/reports',
  path: '/admin/reports',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminPeopleRoute = ModAdminPeopleImport.update({
  id: '/admin/people',
  path: '/admin/people',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNewsRoute = ModAdminNewsImport.update({
  id: '/admin/news',
  path: '/admin/news',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminFiltersRoute = ModAdminFiltersImport.update({
  id: '/admin/filters',
  path: '/admin/filters',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminContestsRoute = ModAdminContestsImport.update({
  id: '/admin/contests',
  path: '/admin/contests',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminAppealsRoute = ModAdminAppealsImport.update({
  id: '/admin/appeals',
  path: '/admin/appeals',
  getParentRoute: () => ModRoute,
} as any)

const GuestWikiSlugRoute = GuestWikiSlugImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => GuestWikiRoute,
} as any)

const GuestProfileSteamIdRoute = GuestProfileSteamIdImport.update({
  id: '/profile/$steamId',
  path: '/profile/$steamId',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginSuccessRoute = GuestLoginSuccessImport.update({
  id: '/login/success',
  path: '/login/success',
  getParentRoute: () => GuestRoute,
} as any)

const AuthReportReportIdRoute = AuthReportReportIdImport.update({
  id: '/$reportId',
  path: '/$reportId',
  getParentRoute: () => AuthReportRoute,
} as any)

const AuthMatchMatchIdRoute = AuthMatchMatchIdImport.update({
  id: '/match/$matchId',
  path: '/match/$matchId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForumsForumidRoute = AuthForumsForumidImport.update({
  id: '/$forum_id',
  path: '/$forum_id',
  getParentRoute: () => AuthForumsRoute,
} as any)

const AuthContestsContestidRoute = AuthContestsContestidImport.update({
  id: '/contests/$contest_id',
  path: '/contests/$contest_id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBanBanidRoute = AuthBanBanidImport.update({
  id: '/ban/$ban_id',
  path: '/ban/$ban_id',
  getParentRoute: () => AuthRoute,
} as any)

const AdminAdminSettingsRoute = AdminAdminSettingsImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminServersRoute = AdminAdminServersImport.update({
  id: '/admin/servers',
  path: '/admin/servers',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminGameAdminsRoute = AdminAdminGameAdminsImport.update({
  id: '/admin/game-admins',
  path: '/admin/game-admins',
  getParentRoute: () => AdminRoute,
} as any)

const ModAdminNetworkIndexRoute = ModAdminNetworkIndexImport.update({
  id: '/admin/network/',
  path: '/admin/network/',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNetworkPlayersbyipRoute = ModAdminNetworkPlayersbyipImport.update(
  {
    id: '/admin/network/playersbyip',
    path: '/admin/network/playersbyip',
    getParentRoute: () => ModRoute,
  } as any,
)

const ModAdminNetworkIphistRoute = ModAdminNetworkIphistImport.update({
  id: '/admin/network/iphist',
  path: '/admin/network/iphist',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNetworkIpInfoRoute = ModAdminNetworkIpInfoImport.update({
  id: '/admin/network/ipInfo',
  path: '/admin/network/ipInfo',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNetworkCidrblocksRoute = ModAdminNetworkCidrblocksImport.update({
  id: '/admin/network/cidrblocks',
  path: '/admin/network/cidrblocks',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanSteamRoute = ModAdminBanSteamImport.update({
  id: '/admin/ban/steam',
  path: '/admin/ban/steam',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanGroupRoute = ModAdminBanGroupImport.update({
  id: '/admin/ban/group',
  path: '/admin/ban/group',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanCidrRoute = ModAdminBanCidrImport.update({
  id: '/admin/ban/cidr',
  path: '/admin/ban/cidr',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanAsnRoute = ModAdminBanAsnImport.update({
  id: '/admin/ban/asn',
  path: '/admin/ban/asn',
  getParentRoute: () => ModRoute,
} as any)

const AuthStatsWeaponWeaponidRoute = AuthStatsWeaponWeaponidImport.update({
  id: '/weapon/$weapon_id',
  path: '/weapon/$weapon_id',
  getParentRoute: () => AuthStatsRoute,
} as any)

const AuthForumsThreadForumthreadidRoute =
  AuthForumsThreadForumthreadidImport.update({
    id: '/thread/$forum_thread_id',
    path: '/thread/$forum_thread_id',
    getParentRoute: () => AuthForumsRoute,
  } as any)

const AuthLogsSteamIdRoute = AuthLogsSteamIdImport.update({
  id: '/logs/$steamId/',
  path: '/logs/$steamId/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_mod': {
      id: '/_mod'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ModImport
      parentRoute: typeof rootRoute
    }
    '/_auth/chatlogs': {
      id: '/_auth/chatlogs'
      path: '/chatlogs'
      fullPath: '/chatlogs'
      preLoaderRoute: typeof AuthChatlogsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/forums': {
      id: '/_auth/forums'
      path: '/forums'
      fullPath: '/forums'
      preLoaderRoute: typeof AuthForumsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthImport
    }
    '/_auth/notifications': {
      id: '/_auth/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AuthNotificationsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/page-not-found': {
      id: '/_auth/page-not-found'
      path: '/page-not-found'
      fullPath: '/page-not-found'
      preLoaderRoute: typeof AuthPageNotFoundImport
      parentRoute: typeof AuthImport
    }
    '/_auth/permission': {
      id: '/_auth/permission'
      path: '/permission'
      fullPath: '/permission'
      preLoaderRoute: typeof AuthPermissionImport
      parentRoute: typeof AuthImport
    }
    '/_auth/report': {
      id: '/_auth/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof AuthReportImport
      parentRoute: typeof AuthImport
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/stats': {
      id: '/_auth/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof AuthStatsImport
      parentRoute: typeof AuthImport
    }
    '/_guest/changelog': {
      id: '/_guest/changelog'
      path: '/changelog'
      fullPath: '/changelog'
      preLoaderRoute: typeof GuestChangelogImport
      parentRoute: typeof GuestImport
    }
    '/_guest/contests': {
      id: '/_guest/contests'
      path: '/contests'
      fullPath: '/contests'
      preLoaderRoute: typeof GuestContestsImport
      parentRoute: typeof GuestImport
    }
    '/_guest/patreon': {
      id: '/_guest/patreon'
      path: '/patreon'
      fullPath: '/patreon'
      preLoaderRoute: typeof GuestPatreonImport
      parentRoute: typeof GuestImport
    }
    '/_guest/privacy-policy': {
      id: '/_guest/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof GuestPrivacyPolicyImport
      parentRoute: typeof GuestImport
    }
    '/_guest/servers': {
      id: '/_guest/servers'
      path: '/servers'
      fullPath: '/servers'
      preLoaderRoute: typeof GuestServersImport
      parentRoute: typeof GuestImport
    }
    '/_guest/stv': {
      id: '/_guest/stv'
      path: '/stv'
      fullPath: '/stv'
      preLoaderRoute: typeof GuestStvImport
      parentRoute: typeof GuestImport
    }
    '/_guest/wiki': {
      id: '/_guest/wiki'
      path: '/wiki'
      fullPath: '/wiki'
      preLoaderRoute: typeof GuestWikiImport
      parentRoute: typeof GuestImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexImport
      parentRoute: typeof GuestImport
    }
    '/_admin/admin/game-admins': {
      id: '/_admin/admin/game-admins'
      path: '/admin/game-admins'
      fullPath: '/admin/game-admins'
      preLoaderRoute: typeof AdminAdminGameAdminsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/servers': {
      id: '/_admin/admin/servers'
      path: '/admin/servers'
      fullPath: '/admin/servers'
      preLoaderRoute: typeof AdminAdminServersImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/settings': {
      id: '/_admin/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminAdminSettingsImport
      parentRoute: typeof AdminImport
    }
    '/_auth/ban/$ban_id': {
      id: '/_auth/ban/$ban_id'
      path: '/ban/$ban_id'
      fullPath: '/ban/$ban_id'
      preLoaderRoute: typeof AuthBanBanidImport
      parentRoute: typeof AuthImport
    }
    '/_auth/contests/$contest_id': {
      id: '/_auth/contests/$contest_id'
      path: '/contests/$contest_id'
      fullPath: '/contests/$contest_id'
      preLoaderRoute: typeof AuthContestsContestidImport
      parentRoute: typeof AuthImport
    }
    '/_auth/forums/$forum_id': {
      id: '/_auth/forums/$forum_id'
      path: '/$forum_id'
      fullPath: '/forums/$forum_id'
      preLoaderRoute: typeof AuthForumsForumidImport
      parentRoute: typeof AuthForumsImport
    }
    '/_auth/match/$matchId': {
      id: '/_auth/match/$matchId'
      path: '/match/$matchId'
      fullPath: '/match/$matchId'
      preLoaderRoute: typeof AuthMatchMatchIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/report/$reportId': {
      id: '/_auth/report/$reportId'
      path: '/$reportId'
      fullPath: '/report/$reportId'
      preLoaderRoute: typeof AuthReportReportIdImport
      parentRoute: typeof AuthReportImport
    }
    '/_guest/login/success': {
      id: '/_guest/login/success'
      path: '/login/success'
      fullPath: '/login/success'
      preLoaderRoute: typeof GuestLoginSuccessImport
      parentRoute: typeof GuestImport
    }
    '/_guest/profile/$steamId': {
      id: '/_guest/profile/$steamId'
      path: '/profile/$steamId'
      fullPath: '/profile/$steamId'
      preLoaderRoute: typeof GuestProfileSteamIdImport
      parentRoute: typeof GuestImport
    }
    '/_guest/wiki/$slug': {
      id: '/_guest/wiki/$slug'
      path: '/$slug'
      fullPath: '/wiki/$slug'
      preLoaderRoute: typeof GuestWikiSlugImport
      parentRoute: typeof GuestWikiImport
    }
    '/_mod/admin/appeals': {
      id: '/_mod/admin/appeals'
      path: '/admin/appeals'
      fullPath: '/admin/appeals'
      preLoaderRoute: typeof ModAdminAppealsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/contests': {
      id: '/_mod/admin/contests'
      path: '/admin/contests'
      fullPath: '/admin/contests'
      preLoaderRoute: typeof ModAdminContestsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/filters': {
      id: '/_mod/admin/filters'
      path: '/admin/filters'
      fullPath: '/admin/filters'
      preLoaderRoute: typeof ModAdminFiltersImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/news': {
      id: '/_mod/admin/news'
      path: '/admin/news'
      fullPath: '/admin/news'
      preLoaderRoute: typeof ModAdminNewsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/people': {
      id: '/_mod/admin/people'
      path: '/admin/people'
      fullPath: '/admin/people'
      preLoaderRoute: typeof ModAdminPeopleImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/reports': {
      id: '/_mod/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof ModAdminReportsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/votes': {
      id: '/_mod/admin/votes'
      path: '/admin/votes'
      fullPath: '/admin/votes'
      preLoaderRoute: typeof ModAdminVotesImport
      parentRoute: typeof ModImport
    }
    '/_auth/forums/': {
      id: '/_auth/forums/'
      path: '/'
      fullPath: '/forums/'
      preLoaderRoute: typeof AuthForumsIndexImport
      parentRoute: typeof AuthForumsImport
    }
    '/_auth/report/': {
      id: '/_auth/report/'
      path: '/'
      fullPath: '/report/'
      preLoaderRoute: typeof AuthReportIndexImport
      parentRoute: typeof AuthReportImport
    }
    '/_auth/stats/': {
      id: '/_auth/stats/'
      path: '/'
      fullPath: '/stats/'
      preLoaderRoute: typeof AuthStatsIndexImport
      parentRoute: typeof AuthStatsImport
    }
    '/_guest/login/': {
      id: '/_guest/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginIndexImport
      parentRoute: typeof GuestImport
    }
    '/_guest/wiki/': {
      id: '/_guest/wiki/'
      path: '/'
      fullPath: '/wiki/'
      preLoaderRoute: typeof GuestWikiIndexImport
      parentRoute: typeof GuestWikiImport
    }
    '/_auth/logs/$steamId/': {
      id: '/_auth/logs/$steamId/'
      path: '/logs/$steamId'
      fullPath: '/logs/$steamId'
      preLoaderRoute: typeof AuthLogsSteamIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/forums/thread/$forum_thread_id': {
      id: '/_auth/forums/thread/$forum_thread_id'
      path: '/thread/$forum_thread_id'
      fullPath: '/forums/thread/$forum_thread_id'
      preLoaderRoute: typeof AuthForumsThreadForumthreadidImport
      parentRoute: typeof AuthForumsImport
    }
    '/_auth/stats/weapon/$weapon_id': {
      id: '/_auth/stats/weapon/$weapon_id'
      path: '/weapon/$weapon_id'
      fullPath: '/stats/weapon/$weapon_id'
      preLoaderRoute: typeof AuthStatsWeaponWeaponidImport
      parentRoute: typeof AuthStatsImport
    }
    '/_mod/admin/ban/asn': {
      id: '/_mod/admin/ban/asn'
      path: '/admin/ban/asn'
      fullPath: '/admin/ban/asn'
      preLoaderRoute: typeof ModAdminBanAsnImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/ban/cidr': {
      id: '/_mod/admin/ban/cidr'
      path: '/admin/ban/cidr'
      fullPath: '/admin/ban/cidr'
      preLoaderRoute: typeof ModAdminBanCidrImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/ban/group': {
      id: '/_mod/admin/ban/group'
      path: '/admin/ban/group'
      fullPath: '/admin/ban/group'
      preLoaderRoute: typeof ModAdminBanGroupImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/ban/steam': {
      id: '/_mod/admin/ban/steam'
      path: '/admin/ban/steam'
      fullPath: '/admin/ban/steam'
      preLoaderRoute: typeof ModAdminBanSteamImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/cidrblocks': {
      id: '/_mod/admin/network/cidrblocks'
      path: '/admin/network/cidrblocks'
      fullPath: '/admin/network/cidrblocks'
      preLoaderRoute: typeof ModAdminNetworkCidrblocksImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/ipInfo': {
      id: '/_mod/admin/network/ipInfo'
      path: '/admin/network/ipInfo'
      fullPath: '/admin/network/ipInfo'
      preLoaderRoute: typeof ModAdminNetworkIpInfoImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/iphist': {
      id: '/_mod/admin/network/iphist'
      path: '/admin/network/iphist'
      fullPath: '/admin/network/iphist'
      preLoaderRoute: typeof ModAdminNetworkIphistImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/playersbyip': {
      id: '/_mod/admin/network/playersbyip'
      path: '/admin/network/playersbyip'
      fullPath: '/admin/network/playersbyip'
      preLoaderRoute: typeof ModAdminNetworkPlayersbyipImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/': {
      id: '/_mod/admin/network/'
      path: '/admin/network'
      fullPath: '/admin/network'
      preLoaderRoute: typeof ModAdminNetworkIndexImport
      parentRoute: typeof ModImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminAdminGameAdminsRoute: typeof AdminAdminGameAdminsRoute
  AdminAdminServersRoute: typeof AdminAdminServersRoute
  AdminAdminSettingsRoute: typeof AdminAdminSettingsRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminGameAdminsRoute: AdminAdminGameAdminsRoute,
  AdminAdminServersRoute: AdminAdminServersRoute,
  AdminAdminSettingsRoute: AdminAdminSettingsRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuthForumsRouteChildren {
  AuthForumsForumidRoute: typeof AuthForumsForumidRoute
  AuthForumsIndexRoute: typeof AuthForumsIndexRoute
  AuthForumsThreadForumthreadidRoute: typeof AuthForumsThreadForumthreadidRoute
}

const AuthForumsRouteChildren: AuthForumsRouteChildren = {
  AuthForumsForumidRoute: AuthForumsForumidRoute,
  AuthForumsIndexRoute: AuthForumsIndexRoute,
  AuthForumsThreadForumthreadidRoute: AuthForumsThreadForumthreadidRoute,
}

const AuthForumsRouteWithChildren = AuthForumsRoute._addFileChildren(
  AuthForumsRouteChildren,
)

interface AuthReportRouteChildren {
  AuthReportReportIdRoute: typeof AuthReportReportIdRoute
  AuthReportIndexRoute: typeof AuthReportIndexRoute
}

const AuthReportRouteChildren: AuthReportRouteChildren = {
  AuthReportReportIdRoute: AuthReportReportIdRoute,
  AuthReportIndexRoute: AuthReportIndexRoute,
}

const AuthReportRouteWithChildren = AuthReportRoute._addFileChildren(
  AuthReportRouteChildren,
)

interface AuthStatsRouteChildren {
  AuthStatsIndexRoute: typeof AuthStatsIndexRoute
  AuthStatsWeaponWeaponidRoute: typeof AuthStatsWeaponWeaponidRoute
}

const AuthStatsRouteChildren: AuthStatsRouteChildren = {
  AuthStatsIndexRoute: AuthStatsIndexRoute,
  AuthStatsWeaponWeaponidRoute: AuthStatsWeaponWeaponidRoute,
}

const AuthStatsRouteWithChildren = AuthStatsRoute._addFileChildren(
  AuthStatsRouteChildren,
)

interface AuthRouteChildren {
  AuthChatlogsRoute: typeof AuthChatlogsRoute
  AuthForumsRoute: typeof AuthForumsRouteWithChildren
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthNotificationsRoute: typeof AuthNotificationsRoute
  AuthPageNotFoundRoute: typeof AuthPageNotFoundRoute
  AuthPermissionRoute: typeof AuthPermissionRoute
  AuthReportRoute: typeof AuthReportRouteWithChildren
  AuthSettingsRoute: typeof AuthSettingsRoute
  AuthStatsRoute: typeof AuthStatsRouteWithChildren
  AuthBanBanidRoute: typeof AuthBanBanidRoute
  AuthContestsContestidRoute: typeof AuthContestsContestidRoute
  AuthMatchMatchIdRoute: typeof AuthMatchMatchIdRoute
  AuthLogsSteamIdRoute: typeof AuthLogsSteamIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthChatlogsRoute: AuthChatlogsRoute,
  AuthForumsRoute: AuthForumsRouteWithChildren,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthNotificationsRoute: AuthNotificationsRoute,
  AuthPageNotFoundRoute: AuthPageNotFoundRoute,
  AuthPermissionRoute: AuthPermissionRoute,
  AuthReportRoute: AuthReportRouteWithChildren,
  AuthSettingsRoute: AuthSettingsRoute,
  AuthStatsRoute: AuthStatsRouteWithChildren,
  AuthBanBanidRoute: AuthBanBanidRoute,
  AuthContestsContestidRoute: AuthContestsContestidRoute,
  AuthMatchMatchIdRoute: AuthMatchMatchIdRoute,
  AuthLogsSteamIdRoute: AuthLogsSteamIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface GuestWikiRouteChildren {
  GuestWikiSlugRoute: typeof GuestWikiSlugRoute
  GuestWikiIndexRoute: typeof GuestWikiIndexRoute
}

const GuestWikiRouteChildren: GuestWikiRouteChildren = {
  GuestWikiSlugRoute: GuestWikiSlugRoute,
  GuestWikiIndexRoute: GuestWikiIndexRoute,
}

const GuestWikiRouteWithChildren = GuestWikiRoute._addFileChildren(
  GuestWikiRouteChildren,
)

interface GuestRouteChildren {
  GuestChangelogRoute: typeof GuestChangelogRoute
  GuestContestsRoute: typeof GuestContestsRoute
  GuestPatreonRoute: typeof GuestPatreonRoute
  GuestPrivacyPolicyRoute: typeof GuestPrivacyPolicyRoute
  GuestServersRoute: typeof GuestServersRoute
  GuestStvRoute: typeof GuestStvRoute
  GuestWikiRoute: typeof GuestWikiRouteWithChildren
  GuestIndexRoute: typeof GuestIndexRoute
  GuestLoginSuccessRoute: typeof GuestLoginSuccessRoute
  GuestProfileSteamIdRoute: typeof GuestProfileSteamIdRoute
  GuestLoginIndexRoute: typeof GuestLoginIndexRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestChangelogRoute: GuestChangelogRoute,
  GuestContestsRoute: GuestContestsRoute,
  GuestPatreonRoute: GuestPatreonRoute,
  GuestPrivacyPolicyRoute: GuestPrivacyPolicyRoute,
  GuestServersRoute: GuestServersRoute,
  GuestStvRoute: GuestStvRoute,
  GuestWikiRoute: GuestWikiRouteWithChildren,
  GuestIndexRoute: GuestIndexRoute,
  GuestLoginSuccessRoute: GuestLoginSuccessRoute,
  GuestProfileSteamIdRoute: GuestProfileSteamIdRoute,
  GuestLoginIndexRoute: GuestLoginIndexRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

interface ModRouteChildren {
  ModAdminAppealsRoute: typeof ModAdminAppealsRoute
  ModAdminContestsRoute: typeof ModAdminContestsRoute
  ModAdminFiltersRoute: typeof ModAdminFiltersRoute
  ModAdminNewsRoute: typeof ModAdminNewsRoute
  ModAdminPeopleRoute: typeof ModAdminPeopleRoute
  ModAdminReportsRoute: typeof ModAdminReportsRoute
  ModAdminVotesRoute: typeof ModAdminVotesRoute
  ModAdminBanAsnRoute: typeof ModAdminBanAsnRoute
  ModAdminBanCidrRoute: typeof ModAdminBanCidrRoute
  ModAdminBanGroupRoute: typeof ModAdminBanGroupRoute
  ModAdminBanSteamRoute: typeof ModAdminBanSteamRoute
  ModAdminNetworkCidrblocksRoute: typeof ModAdminNetworkCidrblocksRoute
  ModAdminNetworkIpInfoRoute: typeof ModAdminNetworkIpInfoRoute
  ModAdminNetworkIphistRoute: typeof ModAdminNetworkIphistRoute
  ModAdminNetworkPlayersbyipRoute: typeof ModAdminNetworkPlayersbyipRoute
  ModAdminNetworkIndexRoute: typeof ModAdminNetworkIndexRoute
}

const ModRouteChildren: ModRouteChildren = {
  ModAdminAppealsRoute: ModAdminAppealsRoute,
  ModAdminContestsRoute: ModAdminContestsRoute,
  ModAdminFiltersRoute: ModAdminFiltersRoute,
  ModAdminNewsRoute: ModAdminNewsRoute,
  ModAdminPeopleRoute: ModAdminPeopleRoute,
  ModAdminReportsRoute: ModAdminReportsRoute,
  ModAdminVotesRoute: ModAdminVotesRoute,
  ModAdminBanAsnRoute: ModAdminBanAsnRoute,
  ModAdminBanCidrRoute: ModAdminBanCidrRoute,
  ModAdminBanGroupRoute: ModAdminBanGroupRoute,
  ModAdminBanSteamRoute: ModAdminBanSteamRoute,
  ModAdminNetworkCidrblocksRoute: ModAdminNetworkCidrblocksRoute,
  ModAdminNetworkIpInfoRoute: ModAdminNetworkIpInfoRoute,
  ModAdminNetworkIphistRoute: ModAdminNetworkIphistRoute,
  ModAdminNetworkPlayersbyipRoute: ModAdminNetworkPlayersbyipRoute,
  ModAdminNetworkIndexRoute: ModAdminNetworkIndexRoute,
}

const ModRouteWithChildren = ModRoute._addFileChildren(ModRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof ModRouteWithChildren
  '/chatlogs': typeof AuthChatlogsRoute
  '/forums': typeof AuthForumsRouteWithChildren
  '/logout': typeof AuthLogoutRoute
  '/notifications': typeof AuthNotificationsRoute
  '/page-not-found': typeof AuthPageNotFoundRoute
  '/permission': typeof AuthPermissionRoute
  '/report': typeof AuthReportRouteWithChildren
  '/settings': typeof AuthSettingsRoute
  '/stats': typeof AuthStatsRouteWithChildren
  '/changelog': typeof GuestChangelogRoute
  '/contests': typeof GuestContestsRoute
  '/patreon': typeof GuestPatreonRoute
  '/privacy-policy': typeof GuestPrivacyPolicyRoute
  '/servers': typeof GuestServersRoute
  '/stv': typeof GuestStvRoute
  '/wiki': typeof GuestWikiRouteWithChildren
  '/': typeof GuestIndexRoute
  '/admin/game-admins': typeof AdminAdminGameAdminsRoute
  '/admin/servers': typeof AdminAdminServersRoute
  '/admin/settings': typeof AdminAdminSettingsRoute
  '/ban/$ban_id': typeof AuthBanBanidRoute
  '/contests/$contest_id': typeof AuthContestsContestidRoute
  '/forums/$forum_id': typeof AuthForumsForumidRoute
  '/match/$matchId': typeof AuthMatchMatchIdRoute
  '/report/$reportId': typeof AuthReportReportIdRoute
  '/login/success': typeof GuestLoginSuccessRoute
  '/profile/$steamId': typeof GuestProfileSteamIdRoute
  '/wiki/$slug': typeof GuestWikiSlugRoute
  '/admin/appeals': typeof ModAdminAppealsRoute
  '/admin/contests': typeof ModAdminContestsRoute
  '/admin/filters': typeof ModAdminFiltersRoute
  '/admin/news': typeof ModAdminNewsRoute
  '/admin/people': typeof ModAdminPeopleRoute
  '/admin/reports': typeof ModAdminReportsRoute
  '/admin/votes': typeof ModAdminVotesRoute
  '/forums/': typeof AuthForumsIndexRoute
  '/report/': typeof AuthReportIndexRoute
  '/stats/': typeof AuthStatsIndexRoute
  '/login': typeof GuestLoginIndexRoute
  '/wiki/': typeof GuestWikiIndexRoute
  '/logs/$steamId': typeof AuthLogsSteamIdRoute
  '/forums/thread/$forum_thread_id': typeof AuthForumsThreadForumthreadidRoute
  '/stats/weapon/$weapon_id': typeof AuthStatsWeaponWeaponidRoute
  '/admin/ban/asn': typeof ModAdminBanAsnRoute
  '/admin/ban/cidr': typeof ModAdminBanCidrRoute
  '/admin/ban/group': typeof ModAdminBanGroupRoute
  '/admin/ban/steam': typeof ModAdminBanSteamRoute
  '/admin/network/cidrblocks': typeof ModAdminNetworkCidrblocksRoute
  '/admin/network/ipInfo': typeof ModAdminNetworkIpInfoRoute
  '/admin/network/iphist': typeof ModAdminNetworkIphistRoute
  '/admin/network/playersbyip': typeof ModAdminNetworkPlayersbyipRoute
  '/admin/network': typeof ModAdminNetworkIndexRoute
}

export interface FileRoutesByTo {
  '': typeof ModRouteWithChildren
  '/chatlogs': typeof AuthChatlogsRoute
  '/logout': typeof AuthLogoutRoute
  '/notifications': typeof AuthNotificationsRoute
  '/page-not-found': typeof AuthPageNotFoundRoute
  '/permission': typeof AuthPermissionRoute
  '/settings': typeof AuthSettingsRoute
  '/changelog': typeof GuestChangelogRoute
  '/contests': typeof GuestContestsRoute
  '/patreon': typeof GuestPatreonRoute
  '/privacy-policy': typeof GuestPrivacyPolicyRoute
  '/servers': typeof GuestServersRoute
  '/stv': typeof GuestStvRoute
  '/': typeof GuestIndexRoute
  '/admin/game-admins': typeof AdminAdminGameAdminsRoute
  '/admin/servers': typeof AdminAdminServersRoute
  '/admin/settings': typeof AdminAdminSettingsRoute
  '/ban/$ban_id': typeof AuthBanBanidRoute
  '/contests/$contest_id': typeof AuthContestsContestidRoute
  '/forums/$forum_id': typeof AuthForumsForumidRoute
  '/match/$matchId': typeof AuthMatchMatchIdRoute
  '/report/$reportId': typeof AuthReportReportIdRoute
  '/login/success': typeof GuestLoginSuccessRoute
  '/profile/$steamId': typeof GuestProfileSteamIdRoute
  '/wiki/$slug': typeof GuestWikiSlugRoute
  '/admin/appeals': typeof ModAdminAppealsRoute
  '/admin/contests': typeof ModAdminContestsRoute
  '/admin/filters': typeof ModAdminFiltersRoute
  '/admin/news': typeof ModAdminNewsRoute
  '/admin/people': typeof ModAdminPeopleRoute
  '/admin/reports': typeof ModAdminReportsRoute
  '/admin/votes': typeof ModAdminVotesRoute
  '/forums': typeof AuthForumsIndexRoute
  '/report': typeof AuthReportIndexRoute
  '/stats': typeof AuthStatsIndexRoute
  '/login': typeof GuestLoginIndexRoute
  '/wiki': typeof GuestWikiIndexRoute
  '/logs/$steamId': typeof AuthLogsSteamIdRoute
  '/forums/thread/$forum_thread_id': typeof AuthForumsThreadForumthreadidRoute
  '/stats/weapon/$weapon_id': typeof AuthStatsWeaponWeaponidRoute
  '/admin/ban/asn': typeof ModAdminBanAsnRoute
  '/admin/ban/cidr': typeof ModAdminBanCidrRoute
  '/admin/ban/group': typeof ModAdminBanGroupRoute
  '/admin/ban/steam': typeof ModAdminBanSteamRoute
  '/admin/network/cidrblocks': typeof ModAdminNetworkCidrblocksRoute
  '/admin/network/ipInfo': typeof ModAdminNetworkIpInfoRoute
  '/admin/network/iphist': typeof ModAdminNetworkIphistRoute
  '/admin/network/playersbyip': typeof ModAdminNetworkPlayersbyipRoute
  '/admin/network': typeof ModAdminNetworkIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/_mod': typeof ModRouteWithChildren
  '/_auth/chatlogs': typeof AuthChatlogsRoute
  '/_auth/forums': typeof AuthForumsRouteWithChildren
  '/_auth/logout': typeof AuthLogoutRoute
  '/_auth/notifications': typeof AuthNotificationsRoute
  '/_auth/page-not-found': typeof AuthPageNotFoundRoute
  '/_auth/permission': typeof AuthPermissionRoute
  '/_auth/report': typeof AuthReportRouteWithChildren
  '/_auth/settings': typeof AuthSettingsRoute
  '/_auth/stats': typeof AuthStatsRouteWithChildren
  '/_guest/changelog': typeof GuestChangelogRoute
  '/_guest/contests': typeof GuestContestsRoute
  '/_guest/patreon': typeof GuestPatreonRoute
  '/_guest/privacy-policy': typeof GuestPrivacyPolicyRoute
  '/_guest/servers': typeof GuestServersRoute
  '/_guest/stv': typeof GuestStvRoute
  '/_guest/wiki': typeof GuestWikiRouteWithChildren
  '/_guest/': typeof GuestIndexRoute
  '/_admin/admin/game-admins': typeof AdminAdminGameAdminsRoute
  '/_admin/admin/servers': typeof AdminAdminServersRoute
  '/_admin/admin/settings': typeof AdminAdminSettingsRoute
  '/_auth/ban/$ban_id': typeof AuthBanBanidRoute
  '/_auth/contests/$contest_id': typeof AuthContestsContestidRoute
  '/_auth/forums/$forum_id': typeof AuthForumsForumidRoute
  '/_auth/match/$matchId': typeof AuthMatchMatchIdRoute
  '/_auth/report/$reportId': typeof AuthReportReportIdRoute
  '/_guest/login/success': typeof GuestLoginSuccessRoute
  '/_guest/profile/$steamId': typeof GuestProfileSteamIdRoute
  '/_guest/wiki/$slug': typeof GuestWikiSlugRoute
  '/_mod/admin/appeals': typeof ModAdminAppealsRoute
  '/_mod/admin/contests': typeof ModAdminContestsRoute
  '/_mod/admin/filters': typeof ModAdminFiltersRoute
  '/_mod/admin/news': typeof ModAdminNewsRoute
  '/_mod/admin/people': typeof ModAdminPeopleRoute
  '/_mod/admin/reports': typeof ModAdminReportsRoute
  '/_mod/admin/votes': typeof ModAdminVotesRoute
  '/_auth/forums/': typeof AuthForumsIndexRoute
  '/_auth/report/': typeof AuthReportIndexRoute
  '/_auth/stats/': typeof AuthStatsIndexRoute
  '/_guest/login/': typeof GuestLoginIndexRoute
  '/_guest/wiki/': typeof GuestWikiIndexRoute
  '/_auth/logs/$steamId/': typeof AuthLogsSteamIdRoute
  '/_auth/forums/thread/$forum_thread_id': typeof AuthForumsThreadForumthreadidRoute
  '/_auth/stats/weapon/$weapon_id': typeof AuthStatsWeaponWeaponidRoute
  '/_mod/admin/ban/asn': typeof ModAdminBanAsnRoute
  '/_mod/admin/ban/cidr': typeof ModAdminBanCidrRoute
  '/_mod/admin/ban/group': typeof ModAdminBanGroupRoute
  '/_mod/admin/ban/steam': typeof ModAdminBanSteamRoute
  '/_mod/admin/network/cidrblocks': typeof ModAdminNetworkCidrblocksRoute
  '/_mod/admin/network/ipInfo': typeof ModAdminNetworkIpInfoRoute
  '/_mod/admin/network/iphist': typeof ModAdminNetworkIphistRoute
  '/_mod/admin/network/playersbyip': typeof ModAdminNetworkPlayersbyipRoute
  '/_mod/admin/network/': typeof ModAdminNetworkIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/chatlogs'
    | '/forums'
    | '/logout'
    | '/notifications'
    | '/page-not-found'
    | '/permission'
    | '/report'
    | '/settings'
    | '/stats'
    | '/changelog'
    | '/contests'
    | '/patreon'
    | '/privacy-policy'
    | '/servers'
    | '/stv'
    | '/wiki'
    | '/'
    | '/admin/game-admins'
    | '/admin/servers'
    | '/admin/settings'
    | '/ban/$ban_id'
    | '/contests/$contest_id'
    | '/forums/$forum_id'
    | '/match/$matchId'
    | '/report/$reportId'
    | '/login/success'
    | '/profile/$steamId'
    | '/wiki/$slug'
    | '/admin/appeals'
    | '/admin/contests'
    | '/admin/filters'
    | '/admin/news'
    | '/admin/people'
    | '/admin/reports'
    | '/admin/votes'
    | '/forums/'
    | '/report/'
    | '/stats/'
    | '/login'
    | '/wiki/'
    | '/logs/$steamId'
    | '/forums/thread/$forum_thread_id'
    | '/stats/weapon/$weapon_id'
    | '/admin/ban/asn'
    | '/admin/ban/cidr'
    | '/admin/ban/group'
    | '/admin/ban/steam'
    | '/admin/network/cidrblocks'
    | '/admin/network/ipInfo'
    | '/admin/network/iphist'
    | '/admin/network/playersbyip'
    | '/admin/network'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/chatlogs'
    | '/logout'
    | '/notifications'
    | '/page-not-found'
    | '/permission'
    | '/settings'
    | '/changelog'
    | '/contests'
    | '/patreon'
    | '/privacy-policy'
    | '/servers'
    | '/stv'
    | '/'
    | '/admin/game-admins'
    | '/admin/servers'
    | '/admin/settings'
    | '/ban/$ban_id'
    | '/contests/$contest_id'
    | '/forums/$forum_id'
    | '/match/$matchId'
    | '/report/$reportId'
    | '/login/success'
    | '/profile/$steamId'
    | '/wiki/$slug'
    | '/admin/appeals'
    | '/admin/contests'
    | '/admin/filters'
    | '/admin/news'
    | '/admin/people'
    | '/admin/reports'
    | '/admin/votes'
    | '/forums'
    | '/report'
    | '/stats'
    | '/login'
    | '/wiki'
    | '/logs/$steamId'
    | '/forums/thread/$forum_thread_id'
    | '/stats/weapon/$weapon_id'
    | '/admin/ban/asn'
    | '/admin/ban/cidr'
    | '/admin/ban/group'
    | '/admin/ban/steam'
    | '/admin/network/cidrblocks'
    | '/admin/network/ipInfo'
    | '/admin/network/iphist'
    | '/admin/network/playersbyip'
    | '/admin/network'
  id:
    | '__root__'
    | '/_admin'
    | '/_auth'
    | '/_guest'
    | '/_mod'
    | '/_auth/chatlogs'
    | '/_auth/forums'
    | '/_auth/logout'
    | '/_auth/notifications'
    | '/_auth/page-not-found'
    | '/_auth/permission'
    | '/_auth/report'
    | '/_auth/settings'
    | '/_auth/stats'
    | '/_guest/changelog'
    | '/_guest/contests'
    | '/_guest/patreon'
    | '/_guest/privacy-policy'
    | '/_guest/servers'
    | '/_guest/stv'
    | '/_guest/wiki'
    | '/_guest/'
    | '/_admin/admin/game-admins'
    | '/_admin/admin/servers'
    | '/_admin/admin/settings'
    | '/_auth/ban/$ban_id'
    | '/_auth/contests/$contest_id'
    | '/_auth/forums/$forum_id'
    | '/_auth/match/$matchId'
    | '/_auth/report/$reportId'
    | '/_guest/login/success'
    | '/_guest/profile/$steamId'
    | '/_guest/wiki/$slug'
    | '/_mod/admin/appeals'
    | '/_mod/admin/contests'
    | '/_mod/admin/filters'
    | '/_mod/admin/news'
    | '/_mod/admin/people'
    | '/_mod/admin/reports'
    | '/_mod/admin/votes'
    | '/_auth/forums/'
    | '/_auth/report/'
    | '/_auth/stats/'
    | '/_guest/login/'
    | '/_guest/wiki/'
    | '/_auth/logs/$steamId/'
    | '/_auth/forums/thread/$forum_thread_id'
    | '/_auth/stats/weapon/$weapon_id'
    | '/_mod/admin/ban/asn'
    | '/_mod/admin/ban/cidr'
    | '/_mod/admin/ban/group'
    | '/_mod/admin/ban/steam'
    | '/_mod/admin/network/cidrblocks'
    | '/_mod/admin/network/ipInfo'
    | '/_mod/admin/network/iphist'
    | '/_mod/admin/network/playersbyip'
    | '/_mod/admin/network/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRoute: typeof AdminRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
  ModRoute: typeof ModRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
  ModRoute: ModRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_auth",
        "/_guest",
        "/_mod"
      ]
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/admin/game-admins",
        "/_admin/admin/servers",
        "/_admin/admin/settings"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/chatlogs",
        "/_auth/forums",
        "/_auth/logout",
        "/_auth/notifications",
        "/_auth/page-not-found",
        "/_auth/permission",
        "/_auth/report",
        "/_auth/settings",
        "/_auth/stats",
        "/_auth/ban/$ban_id",
        "/_auth/contests/$contest_id",
        "/_auth/match/$matchId",
        "/_auth/logs/$steamId/"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/changelog",
        "/_guest/contests",
        "/_guest/patreon",
        "/_guest/privacy-policy",
        "/_guest/servers",
        "/_guest/stv",
        "/_guest/wiki",
        "/_guest/",
        "/_guest/login/success",
        "/_guest/profile/$steamId",
        "/_guest/login/"
      ]
    },
    "/_mod": {
      "filePath": "_mod.tsx",
      "children": [
        "/_mod/admin/appeals",
        "/_mod/admin/contests",
        "/_mod/admin/filters",
        "/_mod/admin/news",
        "/_mod/admin/people",
        "/_mod/admin/reports",
        "/_mod/admin/votes",
        "/_mod/admin/ban/asn",
        "/_mod/admin/ban/cidr",
        "/_mod/admin/ban/group",
        "/_mod/admin/ban/steam",
        "/_mod/admin/network/cidrblocks",
        "/_mod/admin/network/ipInfo",
        "/_mod/admin/network/iphist",
        "/_mod/admin/network/playersbyip",
        "/_mod/admin/network/"
      ]
    },
    "/_auth/chatlogs": {
      "filePath": "_auth.chatlogs.tsx",
      "parent": "/_auth"
    },
    "/_auth/forums": {
      "filePath": "_auth.forums.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/forums/$forum_id",
        "/_auth/forums/",
        "/_auth/forums/thread/$forum_thread_id"
      ]
    },
    "/_auth/logout": {
      "filePath": "_auth.logout.tsx",
      "parent": "/_auth"
    },
    "/_auth/notifications": {
      "filePath": "_auth.notifications.tsx",
      "parent": "/_auth"
    },
    "/_auth/page-not-found": {
      "filePath": "_auth.page-not-found.tsx",
      "parent": "/_auth"
    },
    "/_auth/permission": {
      "filePath": "_auth.permission.tsx",
      "parent": "/_auth"
    },
    "/_auth/report": {
      "filePath": "_auth.report.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/report/$reportId",
        "/_auth/report/"
      ]
    },
    "/_auth/settings": {
      "filePath": "_auth.settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/stats": {
      "filePath": "_auth.stats.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/stats/",
        "/_auth/stats/weapon/$weapon_id"
      ]
    },
    "/_guest/changelog": {
      "filePath": "_guest.changelog.tsx",
      "parent": "/_guest"
    },
    "/_guest/contests": {
      "filePath": "_guest.contests.tsx",
      "parent": "/_guest"
    },
    "/_guest/patreon": {
      "filePath": "_guest.patreon.tsx",
      "parent": "/_guest"
    },
    "/_guest/privacy-policy": {
      "filePath": "_guest.privacy-policy.tsx",
      "parent": "/_guest"
    },
    "/_guest/servers": {
      "filePath": "_guest.servers.tsx",
      "parent": "/_guest"
    },
    "/_guest/stv": {
      "filePath": "_guest.stv.tsx",
      "parent": "/_guest"
    },
    "/_guest/wiki": {
      "filePath": "_guest.wiki.ts",
      "parent": "/_guest",
      "children": [
        "/_guest/wiki/$slug",
        "/_guest/wiki/"
      ]
    },
    "/_guest/": {
      "filePath": "_guest.index.tsx",
      "parent": "/_guest"
    },
    "/_admin/admin/game-admins": {
      "filePath": "_admin.admin.game-admins.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/servers": {
      "filePath": "_admin.admin.servers.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/settings": {
      "filePath": "_admin.admin.settings.tsx",
      "parent": "/_admin"
    },
    "/_auth/ban/$ban_id": {
      "filePath": "_auth.ban.$ban_id.tsx",
      "parent": "/_auth"
    },
    "/_auth/contests/$contest_id": {
      "filePath": "_auth.contests.$contest_id.tsx",
      "parent": "/_auth"
    },
    "/_auth/forums/$forum_id": {
      "filePath": "_auth.forums.$forum_id.tsx",
      "parent": "/_auth/forums"
    },
    "/_auth/match/$matchId": {
      "filePath": "_auth.match.$matchId.tsx",
      "parent": "/_auth"
    },
    "/_auth/report/$reportId": {
      "filePath": "_auth.report.$reportId.tsx",
      "parent": "/_auth/report"
    },
    "/_guest/login/success": {
      "filePath": "_guest.login.success.tsx",
      "parent": "/_guest"
    },
    "/_guest/profile/$steamId": {
      "filePath": "_guest.profile.$steamId.tsx",
      "parent": "/_guest"
    },
    "/_guest/wiki/$slug": {
      "filePath": "_guest.wiki.$slug.tsx",
      "parent": "/_guest/wiki"
    },
    "/_mod/admin/appeals": {
      "filePath": "_mod.admin.appeals.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/contests": {
      "filePath": "_mod.admin.contests.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/filters": {
      "filePath": "_mod.admin.filters.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/news": {
      "filePath": "_mod.admin.news.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/people": {
      "filePath": "_mod.admin.people.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/reports": {
      "filePath": "_mod.admin.reports.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/votes": {
      "filePath": "_mod.admin.votes.tsx",
      "parent": "/_mod"
    },
    "/_auth/forums/": {
      "filePath": "_auth.forums.index.tsx",
      "parent": "/_auth/forums"
    },
    "/_auth/report/": {
      "filePath": "_auth.report.index.tsx",
      "parent": "/_auth/report"
    },
    "/_auth/stats/": {
      "filePath": "_auth.stats.index.tsx",
      "parent": "/_auth/stats"
    },
    "/_guest/login/": {
      "filePath": "_guest.login.index.tsx",
      "parent": "/_guest"
    },
    "/_guest/wiki/": {
      "filePath": "_guest.wiki.index.tsx",
      "parent": "/_guest/wiki"
    },
    "/_auth/logs/$steamId/": {
      "filePath": "_auth.logs.$steamId..tsx",
      "parent": "/_auth"
    },
    "/_auth/forums/thread/$forum_thread_id": {
      "filePath": "_auth.forums.thread.$forum_thread_id.tsx",
      "parent": "/_auth/forums"
    },
    "/_auth/stats/weapon/$weapon_id": {
      "filePath": "_auth.stats.weapon.$weapon_id.tsx",
      "parent": "/_auth/stats"
    },
    "/_mod/admin/ban/asn": {
      "filePath": "_mod.admin.ban.asn.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/ban/cidr": {
      "filePath": "_mod.admin.ban.cidr.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/ban/group": {
      "filePath": "_mod.admin.ban.group.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/ban/steam": {
      "filePath": "_mod.admin.ban.steam.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/cidrblocks": {
      "filePath": "_mod.admin.network.cidrblocks.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/ipInfo": {
      "filePath": "_mod.admin.network.ipInfo.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/iphist": {
      "filePath": "_mod.admin.network.iphist.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/playersbyip": {
      "filePath": "_mod.admin.network.playersbyip.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/": {
      "filePath": "_mod.admin.network.index.tsx",
      "parent": "/_mod"
    }
  }
}
ROUTE_MANIFEST_END */
