/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ModImport } from './routes/_mod'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthImport } from './routes/_auth'
import { Route as AdminImport } from './routes/_admin'
import { Route as GuestIndexImport } from './routes/_guest.index'
import { Route as GuestStvImport } from './routes/_guest.stv'
import { Route as GuestServersImport } from './routes/_guest.servers'
import { Route as GuestPrivacyPolicyImport } from './routes/_guest.privacy-policy'
import { Route as GuestPatreonImport } from './routes/_guest.patreon'
import { Route as GuestContestsImport } from './routes/_guest.contests'
import { Route as AuthSettingsImport } from './routes/_auth.settings'
import { Route as AuthPermissionImport } from './routes/_auth.permission'
import { Route as AuthPageNotFoundImport } from './routes/_auth.page-not-found'
import { Route as AuthNotificationsImport } from './routes/_auth.notifications'
import { Route as AuthLogoutImport } from './routes/_auth.logout'
import { Route as AuthChatlogsImport } from './routes/_auth.chatlogs'
import { Route as GuestWikiIndexImport } from './routes/_guest.wiki.index'
import { Route as GuestLoginIndexImport } from './routes/_guest.login.index'
import { Route as AuthStatsIndexImport } from './routes/_auth.stats.index'
import { Route as AuthReportIndexImport } from './routes/_auth.report.index'
import { Route as AuthForumsIndexImport } from './routes/_auth.forums.index'
import { Route as ModAdminVotesImport } from './routes/_mod.admin.votes'
import { Route as ModAdminReportsImport } from './routes/_mod.admin.reports'
import { Route as ModAdminPeopleImport } from './routes/_mod.admin.people'
import { Route as ModAdminNewsImport } from './routes/_mod.admin.news'
import { Route as ModAdminFiltersImport } from './routes/_mod.admin.filters'
import { Route as ModAdminContestsImport } from './routes/_mod.admin.contests'
import { Route as ModAdminAppealsImport } from './routes/_mod.admin.appeals'
import { Route as GuestWikiSlugImport } from './routes/_guest.wiki.$slug'
import { Route as GuestProfileSteamIdImport } from './routes/_guest.profile.$steamId'
import { Route as GuestLoginSuccessImport } from './routes/_guest.login.success'
import { Route as AuthReportReportIdImport } from './routes/_auth.report.$reportId'
import { Route as AuthMatchMatchIdImport } from './routes/_auth.match.$matchId'
import { Route as AuthForumsForumidImport } from './routes/_auth.forums.$forum_id'
import { Route as AuthContestsContestidImport } from './routes/_auth.contests.$contest_id'
import { Route as AuthBanBanidImport } from './routes/_auth.ban.$ban_id'
import { Route as AdminAdminSettingsImport } from './routes/_admin.admin.settings'
import { Route as AdminAdminServersImport } from './routes/_admin.admin.servers'
import { Route as AdminAdminGameAdminsImport } from './routes/_admin.admin.game-admins'
import { Route as ModAdminNetworkIndexImport } from './routes/_mod.admin.network.index'
import { Route as ModAdminNetworkPlayersbyipImport } from './routes/_mod.admin.network.playersbyip'
import { Route as ModAdminNetworkIphistImport } from './routes/_mod.admin.network.iphist'
import { Route as ModAdminNetworkIpInfoImport } from './routes/_mod.admin.network.ipInfo'
import { Route as ModAdminNetworkCidrblocksImport } from './routes/_mod.admin.network.cidrblocks'
import { Route as ModAdminBanSteamImport } from './routes/_mod.admin.ban.steam'
import { Route as ModAdminBanGroupImport } from './routes/_mod.admin.ban.group'
import { Route as ModAdminBanCidrImport } from './routes/_mod.admin.ban.cidr'
import { Route as ModAdminBanAsnImport } from './routes/_mod.admin.ban.asn'
import { Route as AuthStatsWeaponWeaponidImport } from './routes/_auth.stats.weapon.$weapon_id'
import { Route as AuthForumsThreadForumthreadidImport } from './routes/_auth.forums.thread.$forum_thread_id'
import { Route as AuthLogsSteamIdImport } from './routes/_auth.logs.$steamId.'

// Create/Update Routes

const ModRoute = ModImport.update({
  id: '/_mod',
  getParentRoute: () => rootRoute,
} as any)

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const GuestIndexRoute = GuestIndexImport.update({
  path: '/',
  getParentRoute: () => GuestRoute,
} as any)

const GuestStvRoute = GuestStvImport.update({
  path: '/stv',
  getParentRoute: () => GuestRoute,
} as any)

const GuestServersRoute = GuestServersImport.update({
  path: '/servers',
  getParentRoute: () => GuestRoute,
} as any)

const GuestPrivacyPolicyRoute = GuestPrivacyPolicyImport.update({
  path: '/privacy-policy',
  getParentRoute: () => GuestRoute,
} as any)

const GuestPatreonRoute = GuestPatreonImport.update({
  path: '/patreon',
  getParentRoute: () => GuestRoute,
} as any)

const GuestContestsRoute = GuestContestsImport.update({
  path: '/contests',
  getParentRoute: () => GuestRoute,
} as any)

const AuthSettingsRoute = AuthSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPermissionRoute = AuthPermissionImport.update({
  path: '/permission',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPageNotFoundRoute = AuthPageNotFoundImport.update({
  path: '/page-not-found',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNotificationsRoute = AuthNotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthChatlogsRoute = AuthChatlogsImport.update({
  path: '/chatlogs',
  getParentRoute: () => AuthRoute,
} as any)

const GuestWikiIndexRoute = GuestWikiIndexImport.update({
  path: '/wiki/',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginIndexRoute = GuestLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => GuestRoute,
} as any)

const AuthStatsIndexRoute = AuthStatsIndexImport.update({
  path: '/stats/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthReportIndexRoute = AuthReportIndexImport.update({
  path: '/report/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForumsIndexRoute = AuthForumsIndexImport.update({
  path: '/forums/',
  getParentRoute: () => AuthRoute,
} as any)

const ModAdminVotesRoute = ModAdminVotesImport.update({
  path: '/admin/votes',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminReportsRoute = ModAdminReportsImport.update({
  path: '/admin/reports',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminPeopleRoute = ModAdminPeopleImport.update({
  path: '/admin/people',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNewsRoute = ModAdminNewsImport.update({
  path: '/admin/news',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminFiltersRoute = ModAdminFiltersImport.update({
  path: '/admin/filters',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminContestsRoute = ModAdminContestsImport.update({
  path: '/admin/contests',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminAppealsRoute = ModAdminAppealsImport.update({
  path: '/admin/appeals',
  getParentRoute: () => ModRoute,
} as any)

const GuestWikiSlugRoute = GuestWikiSlugImport.update({
  path: '/wiki/$slug',
  getParentRoute: () => GuestRoute,
} as any)

const GuestProfileSteamIdRoute = GuestProfileSteamIdImport.update({
  path: '/profile/$steamId',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginSuccessRoute = GuestLoginSuccessImport.update({
  path: '/login/success',
  getParentRoute: () => GuestRoute,
} as any)

const AuthReportReportIdRoute = AuthReportReportIdImport.update({
  path: '/report/$reportId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMatchMatchIdRoute = AuthMatchMatchIdImport.update({
  path: '/match/$matchId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForumsForumidRoute = AuthForumsForumidImport.update({
  path: '/forums/$forum_id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthContestsContestidRoute = AuthContestsContestidImport.update({
  path: '/contests/$contest_id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBanBanidRoute = AuthBanBanidImport.update({
  path: '/ban/$ban_id',
  getParentRoute: () => AuthRoute,
} as any)

const AdminAdminSettingsRoute = AdminAdminSettingsImport.update({
  path: '/admin/settings',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminServersRoute = AdminAdminServersImport.update({
  path: '/admin/servers',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminGameAdminsRoute = AdminAdminGameAdminsImport.update({
  path: '/admin/game-admins',
  getParentRoute: () => AdminRoute,
} as any)

const ModAdminNetworkIndexRoute = ModAdminNetworkIndexImport.update({
  path: '/admin/network/',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNetworkPlayersbyipRoute = ModAdminNetworkPlayersbyipImport.update(
  {
    path: '/admin/network/playersbyip',
    getParentRoute: () => ModRoute,
  } as any,
)

const ModAdminNetworkIphistRoute = ModAdminNetworkIphistImport.update({
  path: '/admin/network/iphist',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNetworkIpInfoRoute = ModAdminNetworkIpInfoImport.update({
  path: '/admin/network/ipInfo',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminNetworkCidrblocksRoute = ModAdminNetworkCidrblocksImport.update({
  path: '/admin/network/cidrblocks',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanSteamRoute = ModAdminBanSteamImport.update({
  path: '/admin/ban/steam',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanGroupRoute = ModAdminBanGroupImport.update({
  path: '/admin/ban/group',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanCidrRoute = ModAdminBanCidrImport.update({
  path: '/admin/ban/cidr',
  getParentRoute: () => ModRoute,
} as any)

const ModAdminBanAsnRoute = ModAdminBanAsnImport.update({
  path: '/admin/ban/asn',
  getParentRoute: () => ModRoute,
} as any)

const AuthStatsWeaponWeaponidRoute = AuthStatsWeaponWeaponidImport.update({
  path: '/stats/weapon/$weapon_id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForumsThreadForumthreadidRoute =
  AuthForumsThreadForumthreadidImport.update({
    path: '/forums/thread/$forum_thread_id',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthLogsSteamIdRoute = AuthLogsSteamIdImport.update({
  path: '/logs/$steamId/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_mod': {
      id: '/_mod'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ModImport
      parentRoute: typeof rootRoute
    }
    '/_auth/chatlogs': {
      id: '/_auth/chatlogs'
      path: '/chatlogs'
      fullPath: '/chatlogs'
      preLoaderRoute: typeof AuthChatlogsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthImport
    }
    '/_auth/notifications': {
      id: '/_auth/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AuthNotificationsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/page-not-found': {
      id: '/_auth/page-not-found'
      path: '/page-not-found'
      fullPath: '/page-not-found'
      preLoaderRoute: typeof AuthPageNotFoundImport
      parentRoute: typeof AuthImport
    }
    '/_auth/permission': {
      id: '/_auth/permission'
      path: '/permission'
      fullPath: '/permission'
      preLoaderRoute: typeof AuthPermissionImport
      parentRoute: typeof AuthImport
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsImport
      parentRoute: typeof AuthImport
    }
    '/_guest/contests': {
      id: '/_guest/contests'
      path: '/contests'
      fullPath: '/contests'
      preLoaderRoute: typeof GuestContestsImport
      parentRoute: typeof GuestImport
    }
    '/_guest/patreon': {
      id: '/_guest/patreon'
      path: '/patreon'
      fullPath: '/patreon'
      preLoaderRoute: typeof GuestPatreonImport
      parentRoute: typeof GuestImport
    }
    '/_guest/privacy-policy': {
      id: '/_guest/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof GuestPrivacyPolicyImport
      parentRoute: typeof GuestImport
    }
    '/_guest/servers': {
      id: '/_guest/servers'
      path: '/servers'
      fullPath: '/servers'
      preLoaderRoute: typeof GuestServersImport
      parentRoute: typeof GuestImport
    }
    '/_guest/stv': {
      id: '/_guest/stv'
      path: '/stv'
      fullPath: '/stv'
      preLoaderRoute: typeof GuestStvImport
      parentRoute: typeof GuestImport
    }
    '/_guest/': {
      id: '/_guest/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestIndexImport
      parentRoute: typeof GuestImport
    }
    '/_admin/admin/game-admins': {
      id: '/_admin/admin/game-admins'
      path: '/admin/game-admins'
      fullPath: '/admin/game-admins'
      preLoaderRoute: typeof AdminAdminGameAdminsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/servers': {
      id: '/_admin/admin/servers'
      path: '/admin/servers'
      fullPath: '/admin/servers'
      preLoaderRoute: typeof AdminAdminServersImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/settings': {
      id: '/_admin/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminAdminSettingsImport
      parentRoute: typeof AdminImport
    }
    '/_auth/ban/$ban_id': {
      id: '/_auth/ban/$ban_id'
      path: '/ban/$ban_id'
      fullPath: '/ban/$ban_id'
      preLoaderRoute: typeof AuthBanBanidImport
      parentRoute: typeof AuthImport
    }
    '/_auth/contests/$contest_id': {
      id: '/_auth/contests/$contest_id'
      path: '/contests/$contest_id'
      fullPath: '/contests/$contest_id'
      preLoaderRoute: typeof AuthContestsContestidImport
      parentRoute: typeof AuthImport
    }
    '/_auth/forums/$forum_id': {
      id: '/_auth/forums/$forum_id'
      path: '/forums/$forum_id'
      fullPath: '/forums/$forum_id'
      preLoaderRoute: typeof AuthForumsForumidImport
      parentRoute: typeof AuthImport
    }
    '/_auth/match/$matchId': {
      id: '/_auth/match/$matchId'
      path: '/match/$matchId'
      fullPath: '/match/$matchId'
      preLoaderRoute: typeof AuthMatchMatchIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/report/$reportId': {
      id: '/_auth/report/$reportId'
      path: '/report/$reportId'
      fullPath: '/report/$reportId'
      preLoaderRoute: typeof AuthReportReportIdImport
      parentRoute: typeof AuthImport
    }
    '/_guest/login/success': {
      id: '/_guest/login/success'
      path: '/login/success'
      fullPath: '/login/success'
      preLoaderRoute: typeof GuestLoginSuccessImport
      parentRoute: typeof GuestImport
    }
    '/_guest/profile/$steamId': {
      id: '/_guest/profile/$steamId'
      path: '/profile/$steamId'
      fullPath: '/profile/$steamId'
      preLoaderRoute: typeof GuestProfileSteamIdImport
      parentRoute: typeof GuestImport
    }
    '/_guest/wiki/$slug': {
      id: '/_guest/wiki/$slug'
      path: '/wiki/$slug'
      fullPath: '/wiki/$slug'
      preLoaderRoute: typeof GuestWikiSlugImport
      parentRoute: typeof GuestImport
    }
    '/_mod/admin/appeals': {
      id: '/_mod/admin/appeals'
      path: '/admin/appeals'
      fullPath: '/admin/appeals'
      preLoaderRoute: typeof ModAdminAppealsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/contests': {
      id: '/_mod/admin/contests'
      path: '/admin/contests'
      fullPath: '/admin/contests'
      preLoaderRoute: typeof ModAdminContestsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/filters': {
      id: '/_mod/admin/filters'
      path: '/admin/filters'
      fullPath: '/admin/filters'
      preLoaderRoute: typeof ModAdminFiltersImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/news': {
      id: '/_mod/admin/news'
      path: '/admin/news'
      fullPath: '/admin/news'
      preLoaderRoute: typeof ModAdminNewsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/people': {
      id: '/_mod/admin/people'
      path: '/admin/people'
      fullPath: '/admin/people'
      preLoaderRoute: typeof ModAdminPeopleImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/reports': {
      id: '/_mod/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof ModAdminReportsImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/votes': {
      id: '/_mod/admin/votes'
      path: '/admin/votes'
      fullPath: '/admin/votes'
      preLoaderRoute: typeof ModAdminVotesImport
      parentRoute: typeof ModImport
    }
    '/_auth/forums/': {
      id: '/_auth/forums/'
      path: '/forums'
      fullPath: '/forums'
      preLoaderRoute: typeof AuthForumsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/report/': {
      id: '/_auth/report/'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof AuthReportIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/stats/': {
      id: '/_auth/stats/'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof AuthStatsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_guest/login/': {
      id: '/_guest/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginIndexImport
      parentRoute: typeof GuestImport
    }
    '/_guest/wiki/': {
      id: '/_guest/wiki/'
      path: '/wiki'
      fullPath: '/wiki'
      preLoaderRoute: typeof GuestWikiIndexImport
      parentRoute: typeof GuestImport
    }
    '/_auth/logs/$steamId/': {
      id: '/_auth/logs/$steamId/'
      path: '/logs/$steamId'
      fullPath: '/logs/$steamId'
      preLoaderRoute: typeof AuthLogsSteamIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/forums/thread/$forum_thread_id': {
      id: '/_auth/forums/thread/$forum_thread_id'
      path: '/forums/thread/$forum_thread_id'
      fullPath: '/forums/thread/$forum_thread_id'
      preLoaderRoute: typeof AuthForumsThreadForumthreadidImport
      parentRoute: typeof AuthImport
    }
    '/_auth/stats/weapon/$weapon_id': {
      id: '/_auth/stats/weapon/$weapon_id'
      path: '/stats/weapon/$weapon_id'
      fullPath: '/stats/weapon/$weapon_id'
      preLoaderRoute: typeof AuthStatsWeaponWeaponidImport
      parentRoute: typeof AuthImport
    }
    '/_mod/admin/ban/asn': {
      id: '/_mod/admin/ban/asn'
      path: '/admin/ban/asn'
      fullPath: '/admin/ban/asn'
      preLoaderRoute: typeof ModAdminBanAsnImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/ban/cidr': {
      id: '/_mod/admin/ban/cidr'
      path: '/admin/ban/cidr'
      fullPath: '/admin/ban/cidr'
      preLoaderRoute: typeof ModAdminBanCidrImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/ban/group': {
      id: '/_mod/admin/ban/group'
      path: '/admin/ban/group'
      fullPath: '/admin/ban/group'
      preLoaderRoute: typeof ModAdminBanGroupImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/ban/steam': {
      id: '/_mod/admin/ban/steam'
      path: '/admin/ban/steam'
      fullPath: '/admin/ban/steam'
      preLoaderRoute: typeof ModAdminBanSteamImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/cidrblocks': {
      id: '/_mod/admin/network/cidrblocks'
      path: '/admin/network/cidrblocks'
      fullPath: '/admin/network/cidrblocks'
      preLoaderRoute: typeof ModAdminNetworkCidrblocksImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/ipInfo': {
      id: '/_mod/admin/network/ipInfo'
      path: '/admin/network/ipInfo'
      fullPath: '/admin/network/ipInfo'
      preLoaderRoute: typeof ModAdminNetworkIpInfoImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/iphist': {
      id: '/_mod/admin/network/iphist'
      path: '/admin/network/iphist'
      fullPath: '/admin/network/iphist'
      preLoaderRoute: typeof ModAdminNetworkIphistImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/playersbyip': {
      id: '/_mod/admin/network/playersbyip'
      path: '/admin/network/playersbyip'
      fullPath: '/admin/network/playersbyip'
      preLoaderRoute: typeof ModAdminNetworkPlayersbyipImport
      parentRoute: typeof ModImport
    }
    '/_mod/admin/network/': {
      id: '/_mod/admin/network/'
      path: '/admin/network'
      fullPath: '/admin/network'
      preLoaderRoute: typeof ModAdminNetworkIndexImport
      parentRoute: typeof ModImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AdminRoute: AdminRoute.addChildren({
    AdminAdminGameAdminsRoute,
    AdminAdminServersRoute,
    AdminAdminSettingsRoute,
  }),
  AuthRoute: AuthRoute.addChildren({
    AuthChatlogsRoute,
    AuthLogoutRoute,
    AuthNotificationsRoute,
    AuthPageNotFoundRoute,
    AuthPermissionRoute,
    AuthSettingsRoute,
    AuthBanBanidRoute,
    AuthContestsContestidRoute,
    AuthForumsForumidRoute,
    AuthMatchMatchIdRoute,
    AuthReportReportIdRoute,
    AuthForumsIndexRoute,
    AuthReportIndexRoute,
    AuthStatsIndexRoute,
    AuthLogsSteamIdRoute,
    AuthForumsThreadForumthreadidRoute,
    AuthStatsWeaponWeaponidRoute,
  }),
  GuestRoute: GuestRoute.addChildren({
    GuestContestsRoute,
    GuestPatreonRoute,
    GuestPrivacyPolicyRoute,
    GuestServersRoute,
    GuestStvRoute,
    GuestIndexRoute,
    GuestLoginSuccessRoute,
    GuestProfileSteamIdRoute,
    GuestWikiSlugRoute,
    GuestLoginIndexRoute,
    GuestWikiIndexRoute,
  }),
  ModRoute: ModRoute.addChildren({
    ModAdminAppealsRoute,
    ModAdminContestsRoute,
    ModAdminFiltersRoute,
    ModAdminNewsRoute,
    ModAdminPeopleRoute,
    ModAdminReportsRoute,
    ModAdminVotesRoute,
    ModAdminBanAsnRoute,
    ModAdminBanCidrRoute,
    ModAdminBanGroupRoute,
    ModAdminBanSteamRoute,
    ModAdminNetworkCidrblocksRoute,
    ModAdminNetworkIpInfoRoute,
    ModAdminNetworkIphistRoute,
    ModAdminNetworkPlayersbyipRoute,
    ModAdminNetworkIndexRoute,
  }),
})

/* prettier-ignore-end */


/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_auth",
        "/_guest",
        "/_mod"
      ]
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/admin/game-admins",
        "/_admin/admin/servers",
        "/_admin/admin/settings"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/chatlogs",
        "/_auth/logout",
        "/_auth/notifications",
        "/_auth/page-not-found",
        "/_auth/permission",
        "/_auth/settings",
        "/_auth/ban/$ban_id",
        "/_auth/contests/$contest_id",
        "/_auth/forums/$forum_id",
        "/_auth/match/$matchId",
        "/_auth/report/$reportId",
        "/_auth/forums/",
        "/_auth/report/",
        "/_auth/stats/",
        "/_auth/logs/$steamId/",
        "/_auth/forums/thread/$forum_thread_id",
        "/_auth/stats/weapon/$weapon_id"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/contests",
        "/_guest/patreon",
        "/_guest/privacy-policy",
        "/_guest/servers",
        "/_guest/stv",
        "/_guest/",
        "/_guest/login/success",
        "/_guest/profile/$steamId",
        "/_guest/wiki/$slug",
        "/_guest/login/",
        "/_guest/wiki/"
      ]
    },
    "/_mod": {
      "filePath": "_mod.tsx",
      "children": [
        "/_mod/admin/appeals",
        "/_mod/admin/contests",
        "/_mod/admin/filters",
        "/_mod/admin/news",
        "/_mod/admin/people",
        "/_mod/admin/reports",
        "/_mod/admin/votes",
        "/_mod/admin/ban/asn",
        "/_mod/admin/ban/cidr",
        "/_mod/admin/ban/group",
        "/_mod/admin/ban/steam",
        "/_mod/admin/network/cidrblocks",
        "/_mod/admin/network/ipInfo",
        "/_mod/admin/network/iphist",
        "/_mod/admin/network/playersbyip",
        "/_mod/admin/network/"
      ]
    },
    "/_auth/chatlogs": {
      "filePath": "_auth.chatlogs.tsx",
      "parent": "/_auth"
    },
    "/_auth/logout": {
      "filePath": "_auth.logout.tsx",
      "parent": "/_auth"
    },
    "/_auth/notifications": {
      "filePath": "_auth.notifications.tsx",
      "parent": "/_auth"
    },
    "/_auth/page-not-found": {
      "filePath": "_auth.page-not-found.tsx",
      "parent": "/_auth"
    },
    "/_auth/permission": {
      "filePath": "_auth.permission.tsx",
      "parent": "/_auth"
    },
    "/_auth/settings": {
      "filePath": "_auth.settings.tsx",
      "parent": "/_auth"
    },
    "/_guest/contests": {
      "filePath": "_guest.contests.tsx",
      "parent": "/_guest"
    },
    "/_guest/patreon": {
      "filePath": "_guest.patreon.tsx",
      "parent": "/_guest"
    },
    "/_guest/privacy-policy": {
      "filePath": "_guest.privacy-policy.tsx",
      "parent": "/_guest"
    },
    "/_guest/servers": {
      "filePath": "_guest.servers.tsx",
      "parent": "/_guest"
    },
    "/_guest/stv": {
      "filePath": "_guest.stv.tsx",
      "parent": "/_guest"
    },
    "/_guest/": {
      "filePath": "_guest.index.tsx",
      "parent": "/_guest"
    },
    "/_admin/admin/game-admins": {
      "filePath": "_admin.admin.game-admins.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/servers": {
      "filePath": "_admin.admin.servers.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/settings": {
      "filePath": "_admin.admin.settings.tsx",
      "parent": "/_admin"
    },
    "/_auth/ban/$ban_id": {
      "filePath": "_auth.ban.$ban_id.tsx",
      "parent": "/_auth"
    },
    "/_auth/contests/$contest_id": {
      "filePath": "_auth.contests.$contest_id.tsx",
      "parent": "/_auth"
    },
    "/_auth/forums/$forum_id": {
      "filePath": "_auth.forums.$forum_id.tsx",
      "parent": "/_auth"
    },
    "/_auth/match/$matchId": {
      "filePath": "_auth.match.$matchId.tsx",
      "parent": "/_auth"
    },
    "/_auth/report/$reportId": {
      "filePath": "_auth.report.$reportId.tsx",
      "parent": "/_auth"
    },
    "/_guest/login/success": {
      "filePath": "_guest.login.success.tsx",
      "parent": "/_guest"
    },
    "/_guest/profile/$steamId": {
      "filePath": "_guest.profile.$steamId.tsx",
      "parent": "/_guest"
    },
    "/_guest/wiki/$slug": {
      "filePath": "_guest.wiki.$slug.tsx",
      "parent": "/_guest"
    },
    "/_mod/admin/appeals": {
      "filePath": "_mod.admin.appeals.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/contests": {
      "filePath": "_mod.admin.contests.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/filters": {
      "filePath": "_mod.admin.filters.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/news": {
      "filePath": "_mod.admin.news.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/people": {
      "filePath": "_mod.admin.people.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/reports": {
      "filePath": "_mod.admin.reports.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/votes": {
      "filePath": "_mod.admin.votes.tsx",
      "parent": "/_mod"
    },
    "/_auth/forums/": {
      "filePath": "_auth.forums.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/report/": {
      "filePath": "_auth.report.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/stats/": {
      "filePath": "_auth.stats.index.tsx",
      "parent": "/_auth"
    },
    "/_guest/login/": {
      "filePath": "_guest.login.index.tsx",
      "parent": "/_guest"
    },
    "/_guest/wiki/": {
      "filePath": "_guest.wiki.index.tsx",
      "parent": "/_guest"
    },
    "/_auth/logs/$steamId/": {
      "filePath": "_auth.logs.$steamId..tsx",
      "parent": "/_auth"
    },
    "/_auth/forums/thread/$forum_thread_id": {
      "filePath": "_auth.forums.thread.$forum_thread_id.tsx",
      "parent": "/_auth"
    },
    "/_auth/stats/weapon/$weapon_id": {
      "filePath": "_auth.stats.weapon.$weapon_id.tsx",
      "parent": "/_auth"
    },
    "/_mod/admin/ban/asn": {
      "filePath": "_mod.admin.ban.asn.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/ban/cidr": {
      "filePath": "_mod.admin.ban.cidr.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/ban/group": {
      "filePath": "_mod.admin.ban.group.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/ban/steam": {
      "filePath": "_mod.admin.ban.steam.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/cidrblocks": {
      "filePath": "_mod.admin.network.cidrblocks.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/ipInfo": {
      "filePath": "_mod.admin.network.ipInfo.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/iphist": {
      "filePath": "_mod.admin.network.iphist.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/playersbyip": {
      "filePath": "_mod.admin.network.playersbyip.tsx",
      "parent": "/_mod"
    },
    "/_mod/admin/network/": {
      "filePath": "_mod.admin.network.index.tsx",
      "parent": "/_mod"
    }
  }
}
ROUTE_MANIFEST_END */